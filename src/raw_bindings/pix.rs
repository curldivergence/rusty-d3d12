/* automatically generated by rust-bindgen 0.59.1 */

pub type wchar_t = ::std::os::raw::c_ushort;
pub type ULONG = ::std::os::raw::c_ulong;
pub type BOOL = ::std::os::raw::c_int;
pub type FLOAT = f32;
pub type LPVOID = *mut ::std::os::raw::c_void;
pub type INT = ::std::os::raw::c_int;
pub type UINT = ::std::os::raw::c_uint;
pub type INT8 = ::std::os::raw::c_schar;
pub type UINT8 = ::std::os::raw::c_uchar;
pub type UINT16 = ::std::os::raw::c_ushort;
pub type UINT32 = ::std::os::raw::c_uint;
pub type UINT64 = ::std::os::raw::c_ulonglong;
pub type ULONG_PTR = ::std::os::raw::c_ulonglong;
pub type SIZE_T = ULONG_PTR;
pub type LONG = ::std::os::raw::c_long;
pub type WCHAR = wchar_t;
pub type LPCWSTR = *const WCHAR;
pub type HANDLE = *mut ::std::os::raw::c_void;
pub type HRESULT = ::std::os::raw::c_long;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _GUID {
    pub Data1: ::std::os::raw::c_ulong,
    pub Data2: ::std::os::raw::c_ushort,
    pub Data3: ::std::os::raw::c_ushort,
    pub Data4: [::std::os::raw::c_uchar; 8usize],
}
pub type GUID = _GUID;
pub type IID = GUID;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagRECT {
    pub left: LONG,
    pub top: LONG,
    pub right: LONG,
    pub bottom: LONG,
}
pub type RECT = tagRECT;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IUnknownVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut IUnknown,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut IUnknown) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut IUnknown) -> ULONG,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IUnknown {
    pub lpVtbl: *mut IUnknownVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DXGI_SAMPLE_DESC {
    pub Count: UINT,
    pub Quality: UINT,
}
pub const DXGI_FORMAT_DXGI_FORMAT_UNKNOWN: DXGI_FORMAT = 0;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32B32A32_TYPELESS: DXGI_FORMAT = 1;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32B32A32_FLOAT: DXGI_FORMAT = 2;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32B32A32_UINT: DXGI_FORMAT = 3;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32B32A32_SINT: DXGI_FORMAT = 4;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32B32_TYPELESS: DXGI_FORMAT = 5;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32B32_FLOAT: DXGI_FORMAT = 6;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32B32_UINT: DXGI_FORMAT = 7;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32B32_SINT: DXGI_FORMAT = 8;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16B16A16_TYPELESS: DXGI_FORMAT = 9;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16B16A16_FLOAT: DXGI_FORMAT = 10;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16B16A16_UNORM: DXGI_FORMAT = 11;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16B16A16_UINT: DXGI_FORMAT = 12;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16B16A16_SNORM: DXGI_FORMAT = 13;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16B16A16_SINT: DXGI_FORMAT = 14;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32_TYPELESS: DXGI_FORMAT = 15;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32_FLOAT: DXGI_FORMAT = 16;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32_UINT: DXGI_FORMAT = 17;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G32_SINT: DXGI_FORMAT = 18;
pub const DXGI_FORMAT_DXGI_FORMAT_R32G8X24_TYPELESS: DXGI_FORMAT = 19;
pub const DXGI_FORMAT_DXGI_FORMAT_D32_FLOAT_S8X24_UINT: DXGI_FORMAT = 20;
pub const DXGI_FORMAT_DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS: DXGI_FORMAT = 21;
pub const DXGI_FORMAT_DXGI_FORMAT_X32_TYPELESS_G8X24_UINT: DXGI_FORMAT = 22;
pub const DXGI_FORMAT_DXGI_FORMAT_R10G10B10A2_TYPELESS: DXGI_FORMAT = 23;
pub const DXGI_FORMAT_DXGI_FORMAT_R10G10B10A2_UNORM: DXGI_FORMAT = 24;
pub const DXGI_FORMAT_DXGI_FORMAT_R10G10B10A2_UINT: DXGI_FORMAT = 25;
pub const DXGI_FORMAT_DXGI_FORMAT_R11G11B10_FLOAT: DXGI_FORMAT = 26;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8B8A8_TYPELESS: DXGI_FORMAT = 27;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8B8A8_UNORM: DXGI_FORMAT = 28;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8B8A8_UNORM_SRGB: DXGI_FORMAT = 29;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8B8A8_UINT: DXGI_FORMAT = 30;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8B8A8_SNORM: DXGI_FORMAT = 31;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8B8A8_SINT: DXGI_FORMAT = 32;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16_TYPELESS: DXGI_FORMAT = 33;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16_FLOAT: DXGI_FORMAT = 34;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16_UNORM: DXGI_FORMAT = 35;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16_UINT: DXGI_FORMAT = 36;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16_SNORM: DXGI_FORMAT = 37;
pub const DXGI_FORMAT_DXGI_FORMAT_R16G16_SINT: DXGI_FORMAT = 38;
pub const DXGI_FORMAT_DXGI_FORMAT_R32_TYPELESS: DXGI_FORMAT = 39;
pub const DXGI_FORMAT_DXGI_FORMAT_D32_FLOAT: DXGI_FORMAT = 40;
pub const DXGI_FORMAT_DXGI_FORMAT_R32_FLOAT: DXGI_FORMAT = 41;
pub const DXGI_FORMAT_DXGI_FORMAT_R32_UINT: DXGI_FORMAT = 42;
pub const DXGI_FORMAT_DXGI_FORMAT_R32_SINT: DXGI_FORMAT = 43;
pub const DXGI_FORMAT_DXGI_FORMAT_R24G8_TYPELESS: DXGI_FORMAT = 44;
pub const DXGI_FORMAT_DXGI_FORMAT_D24_UNORM_S8_UINT: DXGI_FORMAT = 45;
pub const DXGI_FORMAT_DXGI_FORMAT_R24_UNORM_X8_TYPELESS: DXGI_FORMAT = 46;
pub const DXGI_FORMAT_DXGI_FORMAT_X24_TYPELESS_G8_UINT: DXGI_FORMAT = 47;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8_TYPELESS: DXGI_FORMAT = 48;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8_UNORM: DXGI_FORMAT = 49;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8_UINT: DXGI_FORMAT = 50;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8_SNORM: DXGI_FORMAT = 51;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8_SINT: DXGI_FORMAT = 52;
pub const DXGI_FORMAT_DXGI_FORMAT_R16_TYPELESS: DXGI_FORMAT = 53;
pub const DXGI_FORMAT_DXGI_FORMAT_R16_FLOAT: DXGI_FORMAT = 54;
pub const DXGI_FORMAT_DXGI_FORMAT_D16_UNORM: DXGI_FORMAT = 55;
pub const DXGI_FORMAT_DXGI_FORMAT_R16_UNORM: DXGI_FORMAT = 56;
pub const DXGI_FORMAT_DXGI_FORMAT_R16_UINT: DXGI_FORMAT = 57;
pub const DXGI_FORMAT_DXGI_FORMAT_R16_SNORM: DXGI_FORMAT = 58;
pub const DXGI_FORMAT_DXGI_FORMAT_R16_SINT: DXGI_FORMAT = 59;
pub const DXGI_FORMAT_DXGI_FORMAT_R8_TYPELESS: DXGI_FORMAT = 60;
pub const DXGI_FORMAT_DXGI_FORMAT_R8_UNORM: DXGI_FORMAT = 61;
pub const DXGI_FORMAT_DXGI_FORMAT_R8_UINT: DXGI_FORMAT = 62;
pub const DXGI_FORMAT_DXGI_FORMAT_R8_SNORM: DXGI_FORMAT = 63;
pub const DXGI_FORMAT_DXGI_FORMAT_R8_SINT: DXGI_FORMAT = 64;
pub const DXGI_FORMAT_DXGI_FORMAT_A8_UNORM: DXGI_FORMAT = 65;
pub const DXGI_FORMAT_DXGI_FORMAT_R1_UNORM: DXGI_FORMAT = 66;
pub const DXGI_FORMAT_DXGI_FORMAT_R9G9B9E5_SHAREDEXP: DXGI_FORMAT = 67;
pub const DXGI_FORMAT_DXGI_FORMAT_R8G8_B8G8_UNORM: DXGI_FORMAT = 68;
pub const DXGI_FORMAT_DXGI_FORMAT_G8R8_G8B8_UNORM: DXGI_FORMAT = 69;
pub const DXGI_FORMAT_DXGI_FORMAT_BC1_TYPELESS: DXGI_FORMAT = 70;
pub const DXGI_FORMAT_DXGI_FORMAT_BC1_UNORM: DXGI_FORMAT = 71;
pub const DXGI_FORMAT_DXGI_FORMAT_BC1_UNORM_SRGB: DXGI_FORMAT = 72;
pub const DXGI_FORMAT_DXGI_FORMAT_BC2_TYPELESS: DXGI_FORMAT = 73;
pub const DXGI_FORMAT_DXGI_FORMAT_BC2_UNORM: DXGI_FORMAT = 74;
pub const DXGI_FORMAT_DXGI_FORMAT_BC2_UNORM_SRGB: DXGI_FORMAT = 75;
pub const DXGI_FORMAT_DXGI_FORMAT_BC3_TYPELESS: DXGI_FORMAT = 76;
pub const DXGI_FORMAT_DXGI_FORMAT_BC3_UNORM: DXGI_FORMAT = 77;
pub const DXGI_FORMAT_DXGI_FORMAT_BC3_UNORM_SRGB: DXGI_FORMAT = 78;
pub const DXGI_FORMAT_DXGI_FORMAT_BC4_TYPELESS: DXGI_FORMAT = 79;
pub const DXGI_FORMAT_DXGI_FORMAT_BC4_UNORM: DXGI_FORMAT = 80;
pub const DXGI_FORMAT_DXGI_FORMAT_BC4_SNORM: DXGI_FORMAT = 81;
pub const DXGI_FORMAT_DXGI_FORMAT_BC5_TYPELESS: DXGI_FORMAT = 82;
pub const DXGI_FORMAT_DXGI_FORMAT_BC5_UNORM: DXGI_FORMAT = 83;
pub const DXGI_FORMAT_DXGI_FORMAT_BC5_SNORM: DXGI_FORMAT = 84;
pub const DXGI_FORMAT_DXGI_FORMAT_B5G6R5_UNORM: DXGI_FORMAT = 85;
pub const DXGI_FORMAT_DXGI_FORMAT_B5G5R5A1_UNORM: DXGI_FORMAT = 86;
pub const DXGI_FORMAT_DXGI_FORMAT_B8G8R8A8_UNORM: DXGI_FORMAT = 87;
pub const DXGI_FORMAT_DXGI_FORMAT_B8G8R8X8_UNORM: DXGI_FORMAT = 88;
pub const DXGI_FORMAT_DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM: DXGI_FORMAT = 89;
pub const DXGI_FORMAT_DXGI_FORMAT_B8G8R8A8_TYPELESS: DXGI_FORMAT = 90;
pub const DXGI_FORMAT_DXGI_FORMAT_B8G8R8A8_UNORM_SRGB: DXGI_FORMAT = 91;
pub const DXGI_FORMAT_DXGI_FORMAT_B8G8R8X8_TYPELESS: DXGI_FORMAT = 92;
pub const DXGI_FORMAT_DXGI_FORMAT_B8G8R8X8_UNORM_SRGB: DXGI_FORMAT = 93;
pub const DXGI_FORMAT_DXGI_FORMAT_BC6H_TYPELESS: DXGI_FORMAT = 94;
pub const DXGI_FORMAT_DXGI_FORMAT_BC6H_UF16: DXGI_FORMAT = 95;
pub const DXGI_FORMAT_DXGI_FORMAT_BC6H_SF16: DXGI_FORMAT = 96;
pub const DXGI_FORMAT_DXGI_FORMAT_BC7_TYPELESS: DXGI_FORMAT = 97;
pub const DXGI_FORMAT_DXGI_FORMAT_BC7_UNORM: DXGI_FORMAT = 98;
pub const DXGI_FORMAT_DXGI_FORMAT_BC7_UNORM_SRGB: DXGI_FORMAT = 99;
pub const DXGI_FORMAT_DXGI_FORMAT_AYUV: DXGI_FORMAT = 100;
pub const DXGI_FORMAT_DXGI_FORMAT_Y410: DXGI_FORMAT = 101;
pub const DXGI_FORMAT_DXGI_FORMAT_Y416: DXGI_FORMAT = 102;
pub const DXGI_FORMAT_DXGI_FORMAT_NV12: DXGI_FORMAT = 103;
pub const DXGI_FORMAT_DXGI_FORMAT_P010: DXGI_FORMAT = 104;
pub const DXGI_FORMAT_DXGI_FORMAT_P016: DXGI_FORMAT = 105;
pub const DXGI_FORMAT_DXGI_FORMAT_420_OPAQUE: DXGI_FORMAT = 106;
pub const DXGI_FORMAT_DXGI_FORMAT_YUY2: DXGI_FORMAT = 107;
pub const DXGI_FORMAT_DXGI_FORMAT_Y210: DXGI_FORMAT = 108;
pub const DXGI_FORMAT_DXGI_FORMAT_Y216: DXGI_FORMAT = 109;
pub const DXGI_FORMAT_DXGI_FORMAT_NV11: DXGI_FORMAT = 110;
pub const DXGI_FORMAT_DXGI_FORMAT_AI44: DXGI_FORMAT = 111;
pub const DXGI_FORMAT_DXGI_FORMAT_IA44: DXGI_FORMAT = 112;
pub const DXGI_FORMAT_DXGI_FORMAT_P8: DXGI_FORMAT = 113;
pub const DXGI_FORMAT_DXGI_FORMAT_A8P8: DXGI_FORMAT = 114;
pub const DXGI_FORMAT_DXGI_FORMAT_B4G4R4A4_UNORM: DXGI_FORMAT = 115;
pub const DXGI_FORMAT_DXGI_FORMAT_P208: DXGI_FORMAT = 130;
pub const DXGI_FORMAT_DXGI_FORMAT_V208: DXGI_FORMAT = 131;
pub const DXGI_FORMAT_DXGI_FORMAT_V408: DXGI_FORMAT = 132;
pub const DXGI_FORMAT_DXGI_FORMAT_SAMPLER_FEEDBACK_MIN_MIP_OPAQUE: DXGI_FORMAT =
    189;
pub const DXGI_FORMAT_DXGI_FORMAT_SAMPLER_FEEDBACK_MIP_REGION_USED_OPAQUE:
    DXGI_FORMAT = 190;
pub const DXGI_FORMAT_DXGI_FORMAT_FORCE_UINT: DXGI_FORMAT = -1;
pub type DXGI_FORMAT = ::std::os::raw::c_int;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_UNDEFINED:
    D3D_PRIMITIVE_TOPOLOGY = 0;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_POINTLIST:
    D3D_PRIMITIVE_TOPOLOGY = 1;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_LINELIST:
    D3D_PRIMITIVE_TOPOLOGY = 2;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_LINESTRIP:
    D3D_PRIMITIVE_TOPOLOGY = 3;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST:
    D3D_PRIMITIVE_TOPOLOGY = 4;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP:
    D3D_PRIMITIVE_TOPOLOGY = 5;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 10;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 11;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 12;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 13;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 33 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 34 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 35 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 36 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 37 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 38 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 39 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 40 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 41 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 42 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 43 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 44 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 45 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 46 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 47 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 48 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 49 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 50 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 51 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 52 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 53 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 54 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 55 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 56 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 57 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 58 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 59 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 60 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 61 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 62 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 63 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 64 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_UNDEFINED:
    D3D_PRIMITIVE_TOPOLOGY = 0;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_POINTLIST:
    D3D_PRIMITIVE_TOPOLOGY = 1;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_LINELIST:
    D3D_PRIMITIVE_TOPOLOGY = 2;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP:
    D3D_PRIMITIVE_TOPOLOGY = 3;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST:
    D3D_PRIMITIVE_TOPOLOGY = 4;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP:
    D3D_PRIMITIVE_TOPOLOGY = 5;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_LINELIST_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 10;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 11;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 12;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D10_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 13;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_UNDEFINED:
    D3D_PRIMITIVE_TOPOLOGY = 0;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_POINTLIST:
    D3D_PRIMITIVE_TOPOLOGY = 1;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_LINELIST:
    D3D_PRIMITIVE_TOPOLOGY = 2;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP:
    D3D_PRIMITIVE_TOPOLOGY = 3;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST:
    D3D_PRIMITIVE_TOPOLOGY = 4;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP:
    D3D_PRIMITIVE_TOPOLOGY = 5;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_LINELIST_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 10;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 11;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 12;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ:
    D3D_PRIMITIVE_TOPOLOGY = 13;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_1_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 33 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_2_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 34 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_3_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 35 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_4_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 36 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_5_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 37 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_6_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 38 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_7_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 39 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_8_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 40 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_9_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 41 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_10_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 42 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_11_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 43 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_12_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 44 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_13_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 45 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_14_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 46 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_15_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 47 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_16_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 48 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_17_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 49 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_18_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 50 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_19_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 51 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_20_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 52 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_21_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 53 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_22_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 54 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_23_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 55 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_24_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 56 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_25_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 57 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_26_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 58 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_27_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 59 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_28_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 60 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_29_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 61 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_30_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 62 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_31_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 63 ;
pub const D3D_PRIMITIVE_TOPOLOGY_D3D11_PRIMITIVE_TOPOLOGY_32_CONTROL_POINT_PATCHLIST : D3D_PRIMITIVE_TOPOLOGY = 64 ;
pub type D3D_PRIMITIVE_TOPOLOGY = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D10BlobVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D10Blob,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D10Blob) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D10Blob) -> ULONG,
    >,
    pub GetBufferPointer: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D10Blob) -> LPVOID,
    >,
    pub GetBufferSize: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D10Blob) -> SIZE_T,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D10Blob {
    pub lpVtbl: *mut ID3D10BlobVtbl,
}
pub type ID3DBlob = ID3D10Blob;
pub type D3D12_GPU_VIRTUAL_ADDRESS = UINT64;
pub const D3D12_COMMAND_LIST_TYPE_D3D12_COMMAND_LIST_TYPE_DIRECT:
    D3D12_COMMAND_LIST_TYPE = 0;
pub const D3D12_COMMAND_LIST_TYPE_D3D12_COMMAND_LIST_TYPE_BUNDLE:
    D3D12_COMMAND_LIST_TYPE = 1;
pub const D3D12_COMMAND_LIST_TYPE_D3D12_COMMAND_LIST_TYPE_COMPUTE:
    D3D12_COMMAND_LIST_TYPE = 2;
pub const D3D12_COMMAND_LIST_TYPE_D3D12_COMMAND_LIST_TYPE_COPY:
    D3D12_COMMAND_LIST_TYPE = 3;
pub const D3D12_COMMAND_LIST_TYPE_D3D12_COMMAND_LIST_TYPE_VIDEO_DECODE:
    D3D12_COMMAND_LIST_TYPE = 4;
pub const D3D12_COMMAND_LIST_TYPE_D3D12_COMMAND_LIST_TYPE_VIDEO_PROCESS:
    D3D12_COMMAND_LIST_TYPE = 5;
pub const D3D12_COMMAND_LIST_TYPE_D3D12_COMMAND_LIST_TYPE_VIDEO_ENCODE:
    D3D12_COMMAND_LIST_TYPE = 6;
pub type D3D12_COMMAND_LIST_TYPE = ::std::os::raw::c_int;
pub const D3D12_COMMAND_QUEUE_FLAGS_D3D12_COMMAND_QUEUE_FLAG_NONE:
    D3D12_COMMAND_QUEUE_FLAGS = 0;
pub const D3D12_COMMAND_QUEUE_FLAGS_D3D12_COMMAND_QUEUE_FLAG_DISABLE_GPU_TIMEOUT : D3D12_COMMAND_QUEUE_FLAGS = 1 ;
pub type D3D12_COMMAND_QUEUE_FLAGS = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_COMMAND_QUEUE_DESC {
    pub Type: D3D12_COMMAND_LIST_TYPE,
    pub Priority: INT,
    pub Flags: D3D12_COMMAND_QUEUE_FLAGS,
    pub NodeMask: UINT,
}
pub use self::D3D_PRIMITIVE_TOPOLOGY as D3D12_PRIMITIVE_TOPOLOGY;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_VIEWPORT {
    pub TopLeftX: FLOAT,
    pub TopLeftY: FLOAT,
    pub Width: FLOAT,
    pub Height: FLOAT,
    pub MinDepth: FLOAT,
    pub MaxDepth: FLOAT,
}
pub type D3D12_RECT = RECT;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_BOX {
    pub left: UINT,
    pub top: UINT,
    pub front: UINT,
    pub right: UINT,
    pub bottom: UINT,
    pub back: UINT,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12RootSignatureVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12RootSignature,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12RootSignature) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12RootSignature) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12RootSignature,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12RootSignature,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12RootSignature,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12RootSignature,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12RootSignature,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12RootSignature {
    pub lpVtbl: *mut ID3D12RootSignatureVtbl,
}
pub const D3D12_HEAP_TYPE_D3D12_HEAP_TYPE_DEFAULT: D3D12_HEAP_TYPE = 1;
pub const D3D12_HEAP_TYPE_D3D12_HEAP_TYPE_UPLOAD: D3D12_HEAP_TYPE = 2;
pub const D3D12_HEAP_TYPE_D3D12_HEAP_TYPE_READBACK: D3D12_HEAP_TYPE = 3;
pub const D3D12_HEAP_TYPE_D3D12_HEAP_TYPE_CUSTOM: D3D12_HEAP_TYPE = 4;
pub type D3D12_HEAP_TYPE = ::std::os::raw::c_int;
pub const D3D12_CPU_PAGE_PROPERTY_D3D12_CPU_PAGE_PROPERTY_UNKNOWN:
    D3D12_CPU_PAGE_PROPERTY = 0;
pub const D3D12_CPU_PAGE_PROPERTY_D3D12_CPU_PAGE_PROPERTY_NOT_AVAILABLE:
    D3D12_CPU_PAGE_PROPERTY = 1;
pub const D3D12_CPU_PAGE_PROPERTY_D3D12_CPU_PAGE_PROPERTY_WRITE_COMBINE:
    D3D12_CPU_PAGE_PROPERTY = 2;
pub const D3D12_CPU_PAGE_PROPERTY_D3D12_CPU_PAGE_PROPERTY_WRITE_BACK:
    D3D12_CPU_PAGE_PROPERTY = 3;
pub type D3D12_CPU_PAGE_PROPERTY = ::std::os::raw::c_int;
pub const D3D12_MEMORY_POOL_D3D12_MEMORY_POOL_UNKNOWN: D3D12_MEMORY_POOL = 0;
pub const D3D12_MEMORY_POOL_D3D12_MEMORY_POOL_L0: D3D12_MEMORY_POOL = 1;
pub const D3D12_MEMORY_POOL_D3D12_MEMORY_POOL_L1: D3D12_MEMORY_POOL = 2;
pub type D3D12_MEMORY_POOL = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_HEAP_PROPERTIES {
    pub Type: D3D12_HEAP_TYPE,
    pub CPUPageProperty: D3D12_CPU_PAGE_PROPERTY,
    pub MemoryPoolPreference: D3D12_MEMORY_POOL,
    pub CreationNodeMask: UINT,
    pub VisibleNodeMask: UINT,
}
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_NONE: D3D12_HEAP_FLAGS = 0;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_SHARED: D3D12_HEAP_FLAGS = 1;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_DENY_BUFFERS: D3D12_HEAP_FLAGS = 4;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_ALLOW_DISPLAY: D3D12_HEAP_FLAGS = 8;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_SHARED_CROSS_ADAPTER:
    D3D12_HEAP_FLAGS = 32;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_DENY_RT_DS_TEXTURES:
    D3D12_HEAP_FLAGS = 64;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_DENY_NON_RT_DS_TEXTURES:
    D3D12_HEAP_FLAGS = 128;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_HARDWARE_PROTECTED:
    D3D12_HEAP_FLAGS = 256;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_ALLOW_WRITE_WATCH: D3D12_HEAP_FLAGS =
    512;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_ALLOW_SHADER_ATOMICS:
    D3D12_HEAP_FLAGS = 1024;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_CREATE_NOT_RESIDENT:
    D3D12_HEAP_FLAGS = 2048;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_CREATE_NOT_ZEROED: D3D12_HEAP_FLAGS =
    4096;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_ALLOW_ALL_BUFFERS_AND_TEXTURES:
    D3D12_HEAP_FLAGS = 0;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_ALLOW_ONLY_BUFFERS:
    D3D12_HEAP_FLAGS = 192;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_ALLOW_ONLY_NON_RT_DS_TEXTURES:
    D3D12_HEAP_FLAGS = 68;
pub const D3D12_HEAP_FLAGS_D3D12_HEAP_FLAG_ALLOW_ONLY_RT_DS_TEXTURES:
    D3D12_HEAP_FLAGS = 132;
pub type D3D12_HEAP_FLAGS = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_HEAP_DESC {
    pub SizeInBytes: UINT64,
    pub Properties: D3D12_HEAP_PROPERTIES,
    pub Alignment: UINT64,
    pub Flags: D3D12_HEAP_FLAGS,
}
pub const D3D12_RESOURCE_DIMENSION_D3D12_RESOURCE_DIMENSION_UNKNOWN:
    D3D12_RESOURCE_DIMENSION = 0;
pub const D3D12_RESOURCE_DIMENSION_D3D12_RESOURCE_DIMENSION_BUFFER:
    D3D12_RESOURCE_DIMENSION = 1;
pub const D3D12_RESOURCE_DIMENSION_D3D12_RESOURCE_DIMENSION_TEXTURE1D:
    D3D12_RESOURCE_DIMENSION = 2;
pub const D3D12_RESOURCE_DIMENSION_D3D12_RESOURCE_DIMENSION_TEXTURE2D:
    D3D12_RESOURCE_DIMENSION = 3;
pub const D3D12_RESOURCE_DIMENSION_D3D12_RESOURCE_DIMENSION_TEXTURE3D:
    D3D12_RESOURCE_DIMENSION = 4;
pub type D3D12_RESOURCE_DIMENSION = ::std::os::raw::c_int;
pub const D3D12_TEXTURE_LAYOUT_D3D12_TEXTURE_LAYOUT_UNKNOWN:
    D3D12_TEXTURE_LAYOUT = 0;
pub const D3D12_TEXTURE_LAYOUT_D3D12_TEXTURE_LAYOUT_ROW_MAJOR:
    D3D12_TEXTURE_LAYOUT = 1;
pub const D3D12_TEXTURE_LAYOUT_D3D12_TEXTURE_LAYOUT_64KB_UNDEFINED_SWIZZLE:
    D3D12_TEXTURE_LAYOUT = 2;
pub const D3D12_TEXTURE_LAYOUT_D3D12_TEXTURE_LAYOUT_64KB_STANDARD_SWIZZLE:
    D3D12_TEXTURE_LAYOUT = 3;
pub type D3D12_TEXTURE_LAYOUT = ::std::os::raw::c_int;
pub const D3D12_RESOURCE_FLAGS_D3D12_RESOURCE_FLAG_NONE: D3D12_RESOURCE_FLAGS =
    0;
pub const D3D12_RESOURCE_FLAGS_D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET:
    D3D12_RESOURCE_FLAGS = 1;
pub const D3D12_RESOURCE_FLAGS_D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL:
    D3D12_RESOURCE_FLAGS = 2;
pub const D3D12_RESOURCE_FLAGS_D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS:
    D3D12_RESOURCE_FLAGS = 4;
pub const D3D12_RESOURCE_FLAGS_D3D12_RESOURCE_FLAG_DENY_SHADER_RESOURCE:
    D3D12_RESOURCE_FLAGS = 8;
pub const D3D12_RESOURCE_FLAGS_D3D12_RESOURCE_FLAG_ALLOW_CROSS_ADAPTER:
    D3D12_RESOURCE_FLAGS = 16;
pub const D3D12_RESOURCE_FLAGS_D3D12_RESOURCE_FLAG_ALLOW_SIMULTANEOUS_ACCESS:
    D3D12_RESOURCE_FLAGS = 32;
pub const D3D12_RESOURCE_FLAGS_D3D12_RESOURCE_FLAG_VIDEO_DECODE_REFERENCE_ONLY : D3D12_RESOURCE_FLAGS = 64 ;
pub const D3D12_RESOURCE_FLAGS_D3D12_RESOURCE_FLAG_VIDEO_ENCODE_REFERENCE_ONLY : D3D12_RESOURCE_FLAGS = 128 ;
pub type D3D12_RESOURCE_FLAGS = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RESOURCE_DESC {
    pub Dimension: D3D12_RESOURCE_DIMENSION,
    pub Alignment: UINT64,
    pub Width: UINT64,
    pub Height: UINT,
    pub DepthOrArraySize: UINT16,
    pub MipLevels: UINT16,
    pub Format: DXGI_FORMAT,
    pub SampleDesc: DXGI_SAMPLE_DESC,
    pub Layout: D3D12_TEXTURE_LAYOUT,
    pub Flags: D3D12_RESOURCE_FLAGS,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_DEPTH_STENCIL_VALUE {
    pub Depth: FLOAT,
    pub Stencil: UINT8,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_CLEAR_VALUE {
    pub Format: DXGI_FORMAT,
    pub __bindgen_anon_1: D3D12_CLEAR_VALUE__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union D3D12_CLEAR_VALUE__bindgen_ty_1 {
    pub Color: [FLOAT; 4usize],
    pub DepthStencil: D3D12_DEPTH_STENCIL_VALUE,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RANGE {
    pub Begin: SIZE_T,
    pub End: SIZE_T,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RANGE_UINT64 {
    pub Begin: UINT64,
    pub End: UINT64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_SUBRESOURCE_RANGE_UINT64 {
    pub Subresource: UINT,
    pub Range: D3D12_RANGE_UINT64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_TILED_RESOURCE_COORDINATE {
    pub X: UINT,
    pub Y: UINT,
    pub Z: UINT,
    pub Subresource: UINT,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_TILE_REGION_SIZE {
    pub NumTiles: UINT,
    pub UseBox: BOOL,
    pub Width: UINT,
    pub Height: UINT16,
    pub Depth: UINT16,
}
pub const D3D12_TILE_RANGE_FLAGS_D3D12_TILE_RANGE_FLAG_NONE:
    D3D12_TILE_RANGE_FLAGS = 0;
pub const D3D12_TILE_RANGE_FLAGS_D3D12_TILE_RANGE_FLAG_NULL:
    D3D12_TILE_RANGE_FLAGS = 1;
pub const D3D12_TILE_RANGE_FLAGS_D3D12_TILE_RANGE_FLAG_SKIP:
    D3D12_TILE_RANGE_FLAGS = 2;
pub const D3D12_TILE_RANGE_FLAGS_D3D12_TILE_RANGE_FLAG_REUSE_SINGLE_TILE:
    D3D12_TILE_RANGE_FLAGS = 4;
pub type D3D12_TILE_RANGE_FLAGS = ::std::os::raw::c_int;
pub const D3D12_TILE_MAPPING_FLAGS_D3D12_TILE_MAPPING_FLAG_NONE:
    D3D12_TILE_MAPPING_FLAGS = 0;
pub const D3D12_TILE_MAPPING_FLAGS_D3D12_TILE_MAPPING_FLAG_NO_HAZARD:
    D3D12_TILE_MAPPING_FLAGS = 1;
pub type D3D12_TILE_MAPPING_FLAGS = ::std::os::raw::c_int;
pub const D3D12_TILE_COPY_FLAGS_D3D12_TILE_COPY_FLAG_NONE:
    D3D12_TILE_COPY_FLAGS = 0;
pub const D3D12_TILE_COPY_FLAGS_D3D12_TILE_COPY_FLAG_NO_HAZARD:
    D3D12_TILE_COPY_FLAGS = 1;
pub const D3D12_TILE_COPY_FLAGS_D3D12_TILE_COPY_FLAG_LINEAR_BUFFER_TO_SWIZZLED_TILED_RESOURCE : D3D12_TILE_COPY_FLAGS = 2 ;
pub const D3D12_TILE_COPY_FLAGS_D3D12_TILE_COPY_FLAG_SWIZZLED_TILED_RESOURCE_TO_LINEAR_BUFFER : D3D12_TILE_COPY_FLAGS = 4 ;
pub type D3D12_TILE_COPY_FLAGS = ::std::os::raw::c_int;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_COMMON:
    D3D12_RESOURCE_STATES = 0;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER : D3D12_RESOURCE_STATES = 1 ;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_INDEX_BUFFER:
    D3D12_RESOURCE_STATES = 2;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_RENDER_TARGET:
    D3D12_RESOURCE_STATES = 4;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_UNORDERED_ACCESS:
    D3D12_RESOURCE_STATES = 8;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_DEPTH_WRITE:
    D3D12_RESOURCE_STATES = 16;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_DEPTH_READ:
    D3D12_RESOURCE_STATES = 32;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE : D3D12_RESOURCE_STATES = 64 ;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE:
    D3D12_RESOURCE_STATES = 128;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_STREAM_OUT:
    D3D12_RESOURCE_STATES = 256;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT:
    D3D12_RESOURCE_STATES = 512;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_COPY_DEST:
    D3D12_RESOURCE_STATES = 1024;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_COPY_SOURCE:
    D3D12_RESOURCE_STATES = 2048;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_RESOLVE_DEST:
    D3D12_RESOURCE_STATES = 4096;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_RESOLVE_SOURCE:
    D3D12_RESOURCE_STATES = 8192;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE : D3D12_RESOURCE_STATES = 4194304 ;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE:
    D3D12_RESOURCE_STATES = 16777216;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_GENERIC_READ:
    D3D12_RESOURCE_STATES = 2755;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_ALL_SHADER_RESOURCE:
    D3D12_RESOURCE_STATES = 192;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_PRESENT:
    D3D12_RESOURCE_STATES = 0;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_PREDICATION:
    D3D12_RESOURCE_STATES = 512;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_VIDEO_DECODE_READ:
    D3D12_RESOURCE_STATES = 65536;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE:
    D3D12_RESOURCE_STATES = 131072;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ:
    D3D12_RESOURCE_STATES = 262144;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE:
    D3D12_RESOURCE_STATES = 524288;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ:
    D3D12_RESOURCE_STATES = 2097152;
pub const D3D12_RESOURCE_STATES_D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE:
    D3D12_RESOURCE_STATES = 8388608;
pub type D3D12_RESOURCE_STATES = ::std::os::raw::c_int;
pub const D3D12_RESOURCE_BARRIER_TYPE_D3D12_RESOURCE_BARRIER_TYPE_TRANSITION:
    D3D12_RESOURCE_BARRIER_TYPE = 0;
pub const D3D12_RESOURCE_BARRIER_TYPE_D3D12_RESOURCE_BARRIER_TYPE_ALIASING:
    D3D12_RESOURCE_BARRIER_TYPE = 1;
pub const D3D12_RESOURCE_BARRIER_TYPE_D3D12_RESOURCE_BARRIER_TYPE_UAV:
    D3D12_RESOURCE_BARRIER_TYPE = 2;
pub type D3D12_RESOURCE_BARRIER_TYPE = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RESOURCE_TRANSITION_BARRIER {
    pub pResource: *mut ID3D12Resource,
    pub Subresource: UINT,
    pub StateBefore: D3D12_RESOURCE_STATES,
    pub StateAfter: D3D12_RESOURCE_STATES,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RESOURCE_ALIASING_BARRIER {
    pub pResourceBefore: *mut ID3D12Resource,
    pub pResourceAfter: *mut ID3D12Resource,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RESOURCE_UAV_BARRIER {
    pub pResource: *mut ID3D12Resource,
}
pub const D3D12_RESOURCE_BARRIER_FLAGS_D3D12_RESOURCE_BARRIER_FLAG_NONE:
    D3D12_RESOURCE_BARRIER_FLAGS = 0;
pub const D3D12_RESOURCE_BARRIER_FLAGS_D3D12_RESOURCE_BARRIER_FLAG_BEGIN_ONLY : D3D12_RESOURCE_BARRIER_FLAGS = 1 ;
pub const D3D12_RESOURCE_BARRIER_FLAGS_D3D12_RESOURCE_BARRIER_FLAG_END_ONLY:
    D3D12_RESOURCE_BARRIER_FLAGS = 2;
pub type D3D12_RESOURCE_BARRIER_FLAGS = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_RESOURCE_BARRIER {
    pub Type: D3D12_RESOURCE_BARRIER_TYPE,
    pub Flags: D3D12_RESOURCE_BARRIER_FLAGS,
    pub __bindgen_anon_1: D3D12_RESOURCE_BARRIER__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union D3D12_RESOURCE_BARRIER__bindgen_ty_1 {
    pub Transition: D3D12_RESOURCE_TRANSITION_BARRIER,
    pub Aliasing: D3D12_RESOURCE_ALIASING_BARRIER,
    pub UAV: D3D12_RESOURCE_UAV_BARRIER,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_SUBRESOURCE_FOOTPRINT {
    pub Format: DXGI_FORMAT,
    pub Width: UINT,
    pub Height: UINT,
    pub Depth: UINT,
    pub RowPitch: UINT,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_PLACED_SUBRESOURCE_FOOTPRINT {
    pub Offset: UINT64,
    pub Footprint: D3D12_SUBRESOURCE_FOOTPRINT,
}
pub const D3D12_TEXTURE_COPY_TYPE_D3D12_TEXTURE_COPY_TYPE_SUBRESOURCE_INDEX:
    D3D12_TEXTURE_COPY_TYPE = 0;
pub const D3D12_TEXTURE_COPY_TYPE_D3D12_TEXTURE_COPY_TYPE_PLACED_FOOTPRINT:
    D3D12_TEXTURE_COPY_TYPE = 1;
pub type D3D12_TEXTURE_COPY_TYPE = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_TEXTURE_COPY_LOCATION {
    pub pResource: *mut ID3D12Resource,
    pub Type: D3D12_TEXTURE_COPY_TYPE,
    pub __bindgen_anon_1: D3D12_TEXTURE_COPY_LOCATION__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union D3D12_TEXTURE_COPY_LOCATION__bindgen_ty_1 {
    pub PlacedFootprint: D3D12_PLACED_SUBRESOURCE_FOOTPRINT,
    pub SubresourceIndex: UINT,
}
pub const D3D12_RESOLVE_MODE_D3D12_RESOLVE_MODE_DECOMPRESS: D3D12_RESOLVE_MODE =
    0;
pub const D3D12_RESOLVE_MODE_D3D12_RESOLVE_MODE_MIN: D3D12_RESOLVE_MODE = 1;
pub const D3D12_RESOLVE_MODE_D3D12_RESOLVE_MODE_MAX: D3D12_RESOLVE_MODE = 2;
pub const D3D12_RESOLVE_MODE_D3D12_RESOLVE_MODE_AVERAGE: D3D12_RESOLVE_MODE = 3;
pub const D3D12_RESOLVE_MODE_D3D12_RESOLVE_MODE_ENCODE_SAMPLER_FEEDBACK:
    D3D12_RESOLVE_MODE = 4;
pub const D3D12_RESOLVE_MODE_D3D12_RESOLVE_MODE_DECODE_SAMPLER_FEEDBACK:
    D3D12_RESOLVE_MODE = 5;
pub type D3D12_RESOLVE_MODE = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_SAMPLE_POSITION {
    pub X: INT8,
    pub Y: INT8,
}
pub const D3D12_CLEAR_FLAGS_D3D12_CLEAR_FLAG_DEPTH: D3D12_CLEAR_FLAGS = 1;
pub const D3D12_CLEAR_FLAGS_D3D12_CLEAR_FLAG_STENCIL: D3D12_CLEAR_FLAGS = 2;
pub type D3D12_CLEAR_FLAGS = ::std::os::raw::c_int;
pub const D3D12_DESCRIPTOR_HEAP_TYPE_D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV:
    D3D12_DESCRIPTOR_HEAP_TYPE = 0;
pub const D3D12_DESCRIPTOR_HEAP_TYPE_D3D12_DESCRIPTOR_HEAP_TYPE_SAMPLER:
    D3D12_DESCRIPTOR_HEAP_TYPE = 1;
pub const D3D12_DESCRIPTOR_HEAP_TYPE_D3D12_DESCRIPTOR_HEAP_TYPE_RTV:
    D3D12_DESCRIPTOR_HEAP_TYPE = 2;
pub const D3D12_DESCRIPTOR_HEAP_TYPE_D3D12_DESCRIPTOR_HEAP_TYPE_DSV:
    D3D12_DESCRIPTOR_HEAP_TYPE = 3;
pub const D3D12_DESCRIPTOR_HEAP_TYPE_D3D12_DESCRIPTOR_HEAP_TYPE_NUM_TYPES:
    D3D12_DESCRIPTOR_HEAP_TYPE = 4;
pub type D3D12_DESCRIPTOR_HEAP_TYPE = ::std::os::raw::c_int;
pub const D3D12_DESCRIPTOR_HEAP_FLAGS_D3D12_DESCRIPTOR_HEAP_FLAG_NONE:
    D3D12_DESCRIPTOR_HEAP_FLAGS = 0;
pub const D3D12_DESCRIPTOR_HEAP_FLAGS_D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE : D3D12_DESCRIPTOR_HEAP_FLAGS = 1 ;
pub type D3D12_DESCRIPTOR_HEAP_FLAGS = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_DESCRIPTOR_HEAP_DESC {
    pub Type: D3D12_DESCRIPTOR_HEAP_TYPE,
    pub NumDescriptors: UINT,
    pub Flags: D3D12_DESCRIPTOR_HEAP_FLAGS,
    pub NodeMask: UINT,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_CPU_DESCRIPTOR_HANDLE {
    pub ptr: SIZE_T,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_GPU_DESCRIPTOR_HANDLE {
    pub ptr: UINT64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_DISCARD_REGION {
    pub NumRects: UINT,
    pub pRects: *const D3D12_RECT,
    pub FirstSubresource: UINT,
    pub NumSubresources: UINT,
}
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_OCCLUSION: D3D12_QUERY_TYPE = 0;
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_BINARY_OCCLUSION: D3D12_QUERY_TYPE =
    1;
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_TIMESTAMP: D3D12_QUERY_TYPE = 2;
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_PIPELINE_STATISTICS:
    D3D12_QUERY_TYPE = 3;
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_SO_STATISTICS_STREAM0:
    D3D12_QUERY_TYPE = 4;
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_SO_STATISTICS_STREAM1:
    D3D12_QUERY_TYPE = 5;
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_SO_STATISTICS_STREAM2:
    D3D12_QUERY_TYPE = 6;
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_SO_STATISTICS_STREAM3:
    D3D12_QUERY_TYPE = 7;
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_VIDEO_DECODE_STATISTICS:
    D3D12_QUERY_TYPE = 8;
pub const D3D12_QUERY_TYPE_D3D12_QUERY_TYPE_PIPELINE_STATISTICS1:
    D3D12_QUERY_TYPE = 10;
pub type D3D12_QUERY_TYPE = ::std::os::raw::c_int;
pub const D3D12_PREDICATION_OP_D3D12_PREDICATION_OP_EQUAL_ZERO:
    D3D12_PREDICATION_OP = 0;
pub const D3D12_PREDICATION_OP_D3D12_PREDICATION_OP_NOT_EQUAL_ZERO:
    D3D12_PREDICATION_OP = 1;
pub type D3D12_PREDICATION_OP = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_STREAM_OUTPUT_BUFFER_VIEW {
    pub BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
    pub SizeInBytes: UINT64,
    pub BufferFilledSizeLocation: D3D12_GPU_VIRTUAL_ADDRESS,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_VERTEX_BUFFER_VIEW {
    pub BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
    pub SizeInBytes: UINT,
    pub StrideInBytes: UINT,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_INDEX_BUFFER_VIEW {
    pub BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
    pub SizeInBytes: UINT,
    pub Format: DXGI_FORMAT,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12HeapVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Heap,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Heap) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Heap) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Heap,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Heap,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Heap,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Heap, Name: LPCWSTR) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Heap,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetDesc: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Heap,
            RetVal: *mut D3D12_HEAP_DESC,
        ) -> *mut D3D12_HEAP_DESC,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12Heap {
    pub lpVtbl: *mut ID3D12HeapVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12ResourceVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Resource) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Resource) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub Map: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            Subresource: UINT,
            pReadRange: *const D3D12_RANGE,
            ppData: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub Unmap: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            Subresource: UINT,
            pWrittenRange: *const D3D12_RANGE,
        ),
    >,
    pub GetDesc: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            RetVal: *mut D3D12_RESOURCE_DESC,
        ) -> *mut D3D12_RESOURCE_DESC,
    >,
    pub GetGPUVirtualAddress: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
        ) -> D3D12_GPU_VIRTUAL_ADDRESS,
    >,
    pub WriteToSubresource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            DstSubresource: UINT,
            pDstBox: *const D3D12_BOX,
            pSrcData: *const ::std::os::raw::c_void,
            SrcRowPitch: UINT,
            SrcDepthPitch: UINT,
        ) -> HRESULT,
    >,
    pub ReadFromSubresource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            pDstData: *mut ::std::os::raw::c_void,
            DstRowPitch: UINT,
            DstDepthPitch: UINT,
            SrcSubresource: UINT,
            pSrcBox: *const D3D12_BOX,
        ) -> HRESULT,
    >,
    pub GetHeapProperties: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Resource,
            pHeapProperties: *mut D3D12_HEAP_PROPERTIES,
            pHeapFlags: *mut D3D12_HEAP_FLAGS,
        ) -> HRESULT,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12Resource {
    pub lpVtbl: *mut ID3D12ResourceVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12CommandAllocatorVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandAllocator,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12CommandAllocator) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12CommandAllocator) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandAllocator,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandAllocator,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandAllocator,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandAllocator,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandAllocator,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub Reset: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12CommandAllocator) -> HRESULT,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12CommandAllocator {
    pub lpVtbl: *mut ID3D12CommandAllocatorVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12FenceVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Fence,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Fence) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Fence) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Fence,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Fence,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Fence,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Fence, Name: LPCWSTR) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Fence,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetCompletedValue: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Fence) -> UINT64,
    >,
    pub SetEventOnCompletion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12Fence,
            Value: UINT64,
            hEvent: HANDLE,
        ) -> HRESULT,
    >,
    pub Signal: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12Fence, Value: UINT64) -> HRESULT,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12Fence {
    pub lpVtbl: *mut ID3D12FenceVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12PipelineStateVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12PipelineState,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12PipelineState) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12PipelineState) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12PipelineState,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12PipelineState,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12PipelineState,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12PipelineState,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12PipelineState,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetCachedBlob: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12PipelineState,
            ppBlob: *mut *mut ID3DBlob,
        ) -> HRESULT,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12PipelineState {
    pub lpVtbl: *mut ID3D12PipelineStateVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12DescriptorHeapVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12DescriptorHeap,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12DescriptorHeap) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12DescriptorHeap) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12DescriptorHeap,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12DescriptorHeap,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12DescriptorHeap,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12DescriptorHeap,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12DescriptorHeap,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetDesc: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12DescriptorHeap,
            RetVal: *mut D3D12_DESCRIPTOR_HEAP_DESC,
        ) -> *mut D3D12_DESCRIPTOR_HEAP_DESC,
    >,
    pub GetCPUDescriptorHandleForHeapStart: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12DescriptorHeap,
            RetVal: *mut D3D12_CPU_DESCRIPTOR_HANDLE,
        ) -> *mut D3D12_CPU_DESCRIPTOR_HANDLE,
    >,
    pub GetGPUDescriptorHandleForHeapStart: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12DescriptorHeap,
            RetVal: *mut D3D12_GPU_DESCRIPTOR_HANDLE,
        ) -> *mut D3D12_GPU_DESCRIPTOR_HANDLE,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12DescriptorHeap {
    pub lpVtbl: *mut ID3D12DescriptorHeapVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12QueryHeapVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12QueryHeap,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12QueryHeap) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12QueryHeap) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12QueryHeap,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12QueryHeap,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12QueryHeap,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12QueryHeap,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12QueryHeap,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12QueryHeap {
    pub lpVtbl: *mut ID3D12QueryHeapVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12CommandSignatureVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandSignature,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12CommandSignature) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12CommandSignature) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandSignature,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandSignature,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandSignature,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandSignature,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandSignature,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12CommandSignature {
    pub lpVtbl: *mut ID3D12CommandSignatureVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12CommandListVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandList,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12CommandList) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12CommandList) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandList,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandList,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandList,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandList,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandList,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetType: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12CommandList,
        ) -> D3D12_COMMAND_LIST_TYPE,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12CommandList {
    pub lpVtbl: *mut ID3D12CommandListVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandListVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetType: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
        ) -> D3D12_COMMAND_LIST_TYPE,
    >,
    pub Close: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList) -> HRESULT,
    >,
    pub Reset: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pAllocator: *mut ID3D12CommandAllocator,
            pInitialState: *mut ID3D12PipelineState,
        ) -> HRESULT,
    >,
    pub ClearState: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pPipelineState: *mut ID3D12PipelineState,
        ),
    >,
    pub DrawInstanced: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            VertexCountPerInstance: UINT,
            InstanceCount: UINT,
            StartVertexLocation: UINT,
            StartInstanceLocation: UINT,
        ),
    >,
    pub DrawIndexedInstanced: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            IndexCountPerInstance: UINT,
            InstanceCount: UINT,
            StartIndexLocation: UINT,
            BaseVertexLocation: INT,
            StartInstanceLocation: UINT,
        ),
    >,
    pub Dispatch: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            ThreadGroupCountX: UINT,
            ThreadGroupCountY: UINT,
            ThreadGroupCountZ: UINT,
        ),
    >,
    pub CopyBufferRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            NumBytes: UINT64,
        ),
    >,
    pub CopyTextureRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pDst: *const D3D12_TEXTURE_COPY_LOCATION,
            DstX: UINT,
            DstY: UINT,
            DstZ: UINT,
            pSrc: *const D3D12_TEXTURE_COPY_LOCATION,
            pSrcBox: *const D3D12_BOX,
        ),
    >,
    pub CopyResource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pDstResource: *mut ID3D12Resource,
            pSrcResource: *mut ID3D12Resource,
        ),
    >,
    pub CopyTiles: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pTiledResource: *mut ID3D12Resource,
            pTileRegionStartCoordinate: *const D3D12_TILED_RESOURCE_COORDINATE,
            pTileRegionSize: *const D3D12_TILE_REGION_SIZE,
            pBuffer: *mut ID3D12Resource,
            BufferStartOffsetInBytes: UINT64,
            Flags: D3D12_TILE_COPY_FLAGS,
        ),
    >,
    pub ResolveSubresource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pDstResource: *mut ID3D12Resource,
            DstSubresource: UINT,
            pSrcResource: *mut ID3D12Resource,
            SrcSubresource: UINT,
            Format: DXGI_FORMAT,
        ),
    >,
    pub IASetPrimitiveTopology: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            PrimitiveTopology: D3D12_PRIMITIVE_TOPOLOGY,
        ),
    >,
    pub RSSetViewports: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            NumViewports: UINT,
            pViewports: *const D3D12_VIEWPORT,
        ),
    >,
    pub RSSetScissorRects: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub OMSetBlendFactor: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            BlendFactor: *const FLOAT,
        ),
    >,
    pub OMSetStencilRef: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            StencilRef: UINT,
        ),
    >,
    pub SetPipelineState: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pPipelineState: *mut ID3D12PipelineState,
        ),
    >,
    pub ResourceBarrier: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            NumBarriers: UINT,
            pBarriers: *const D3D12_RESOURCE_BARRIER,
        ),
    >,
    pub ExecuteBundle: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pCommandList: *mut ID3D12GraphicsCommandList,
        ),
    >,
    pub SetDescriptorHeaps: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            NumDescriptorHeaps: UINT,
            ppDescriptorHeaps: *const *mut ID3D12DescriptorHeap,
        ),
    >,
    pub SetComputeRootSignature: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pRootSignature: *mut ID3D12RootSignature,
        ),
    >,
    pub SetGraphicsRootSignature: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pRootSignature: *mut ID3D12RootSignature,
        ),
    >,
    pub SetComputeRootDescriptorTable: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub SetGraphicsRootDescriptorTable: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub SetComputeRoot32BitConstant: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            SrcData: UINT,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetGraphicsRoot32BitConstant: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            SrcData: UINT,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetComputeRoot32BitConstants: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            Num32BitValuesToSet: UINT,
            pSrcData: *const ::std::os::raw::c_void,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetGraphicsRoot32BitConstants: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            Num32BitValuesToSet: UINT,
            pSrcData: *const ::std::os::raw::c_void,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetComputeRootConstantBufferView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootConstantBufferView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetComputeRootShaderResourceView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootShaderResourceView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetComputeRootUnorderedAccessView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootUnorderedAccessView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub IASetIndexBuffer: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pView: *const D3D12_INDEX_BUFFER_VIEW,
        ),
    >,
    pub IASetVertexBuffers: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            StartSlot: UINT,
            NumViews: UINT,
            pViews: *const D3D12_VERTEX_BUFFER_VIEW,
        ),
    >,
    pub SOSetTargets: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            StartSlot: UINT,
            NumViews: UINT,
            pViews: *const D3D12_STREAM_OUTPUT_BUFFER_VIEW,
        ),
    >,
    pub OMSetRenderTargets: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            NumRenderTargetDescriptors: UINT,
            pRenderTargetDescriptors: *const D3D12_CPU_DESCRIPTOR_HANDLE,
            RTsSingleHandleToDescriptorRange: BOOL,
            pDepthStencilDescriptor: *const D3D12_CPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub ClearDepthStencilView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            DepthStencilView: D3D12_CPU_DESCRIPTOR_HANDLE,
            ClearFlags: D3D12_CLEAR_FLAGS,
            Depth: FLOAT,
            Stencil: UINT8,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearRenderTargetView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            RenderTargetView: D3D12_CPU_DESCRIPTOR_HANDLE,
            ColorRGBA: *const FLOAT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearUnorderedAccessViewUint: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE,
            ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE,
            pResource: *mut ID3D12Resource,
            Values: *const UINT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearUnorderedAccessViewFloat: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE,
            ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE,
            pResource: *mut ID3D12Resource,
            Values: *const FLOAT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub DiscardResource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pResource: *mut ID3D12Resource,
            pRegion: *const D3D12_DISCARD_REGION,
        ),
    >,
    pub BeginQuery: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            Index: UINT,
        ),
    >,
    pub EndQuery: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            Index: UINT,
        ),
    >,
    pub ResolveQueryData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            StartIndex: UINT,
            NumQueries: UINT,
            pDestinationBuffer: *mut ID3D12Resource,
            AlignedDestinationBufferOffset: UINT64,
        ),
    >,
    pub SetPredication: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pBuffer: *mut ID3D12Resource,
            AlignedBufferOffset: UINT64,
            Operation: D3D12_PREDICATION_OP,
        ),
    >,
    pub SetMarker: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            Metadata: UINT,
            pData: *const ::std::os::raw::c_void,
            Size: UINT,
        ),
    >,
    pub BeginEvent: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            Metadata: UINT,
            pData: *const ::std::os::raw::c_void,
            Size: UINT,
        ),
    >,
    pub EndEvent: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList),
    >,
    pub ExecuteIndirect: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList,
            pCommandSignature: *mut ID3D12CommandSignature,
            MaxCommandCount: UINT,
            pArgumentBuffer: *mut ID3D12Resource,
            ArgumentBufferOffset: UINT64,
            pCountBuffer: *mut ID3D12Resource,
            CountBufferOffset: UINT64,
        ),
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList {
    pub lpVtbl: *mut ID3D12GraphicsCommandListVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList1Vtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList1) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList1) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetType: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
        ) -> D3D12_COMMAND_LIST_TYPE,
    >,
    pub Close: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList1) -> HRESULT,
    >,
    pub Reset: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pAllocator: *mut ID3D12CommandAllocator,
            pInitialState: *mut ID3D12PipelineState,
        ) -> HRESULT,
    >,
    pub ClearState: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pPipelineState: *mut ID3D12PipelineState,
        ),
    >,
    pub DrawInstanced: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            VertexCountPerInstance: UINT,
            InstanceCount: UINT,
            StartVertexLocation: UINT,
            StartInstanceLocation: UINT,
        ),
    >,
    pub DrawIndexedInstanced: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            IndexCountPerInstance: UINT,
            InstanceCount: UINT,
            StartIndexLocation: UINT,
            BaseVertexLocation: INT,
            StartInstanceLocation: UINT,
        ),
    >,
    pub Dispatch: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            ThreadGroupCountX: UINT,
            ThreadGroupCountY: UINT,
            ThreadGroupCountZ: UINT,
        ),
    >,
    pub CopyBufferRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            NumBytes: UINT64,
        ),
    >,
    pub CopyTextureRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pDst: *const D3D12_TEXTURE_COPY_LOCATION,
            DstX: UINT,
            DstY: UINT,
            DstZ: UINT,
            pSrc: *const D3D12_TEXTURE_COPY_LOCATION,
            pSrcBox: *const D3D12_BOX,
        ),
    >,
    pub CopyResource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pDstResource: *mut ID3D12Resource,
            pSrcResource: *mut ID3D12Resource,
        ),
    >,
    pub CopyTiles: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pTiledResource: *mut ID3D12Resource,
            pTileRegionStartCoordinate: *const D3D12_TILED_RESOURCE_COORDINATE,
            pTileRegionSize: *const D3D12_TILE_REGION_SIZE,
            pBuffer: *mut ID3D12Resource,
            BufferStartOffsetInBytes: UINT64,
            Flags: D3D12_TILE_COPY_FLAGS,
        ),
    >,
    pub ResolveSubresource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pDstResource: *mut ID3D12Resource,
            DstSubresource: UINT,
            pSrcResource: *mut ID3D12Resource,
            SrcSubresource: UINT,
            Format: DXGI_FORMAT,
        ),
    >,
    pub IASetPrimitiveTopology: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            PrimitiveTopology: D3D12_PRIMITIVE_TOPOLOGY,
        ),
    >,
    pub RSSetViewports: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            NumViewports: UINT,
            pViewports: *const D3D12_VIEWPORT,
        ),
    >,
    pub RSSetScissorRects: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub OMSetBlendFactor: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            BlendFactor: *const FLOAT,
        ),
    >,
    pub OMSetStencilRef: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            StencilRef: UINT,
        ),
    >,
    pub SetPipelineState: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pPipelineState: *mut ID3D12PipelineState,
        ),
    >,
    pub ResourceBarrier: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            NumBarriers: UINT,
            pBarriers: *const D3D12_RESOURCE_BARRIER,
        ),
    >,
    pub ExecuteBundle: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pCommandList: *mut ID3D12GraphicsCommandList,
        ),
    >,
    pub SetDescriptorHeaps: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            NumDescriptorHeaps: UINT,
            ppDescriptorHeaps: *const *mut ID3D12DescriptorHeap,
        ),
    >,
    pub SetComputeRootSignature: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pRootSignature: *mut ID3D12RootSignature,
        ),
    >,
    pub SetGraphicsRootSignature: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pRootSignature: *mut ID3D12RootSignature,
        ),
    >,
    pub SetComputeRootDescriptorTable: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub SetGraphicsRootDescriptorTable: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub SetComputeRoot32BitConstant: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            SrcData: UINT,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetGraphicsRoot32BitConstant: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            SrcData: UINT,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetComputeRoot32BitConstants: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            Num32BitValuesToSet: UINT,
            pSrcData: *const ::std::os::raw::c_void,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetGraphicsRoot32BitConstants: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            Num32BitValuesToSet: UINT,
            pSrcData: *const ::std::os::raw::c_void,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetComputeRootConstantBufferView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootConstantBufferView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetComputeRootShaderResourceView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootShaderResourceView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetComputeRootUnorderedAccessView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootUnorderedAccessView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub IASetIndexBuffer: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pView: *const D3D12_INDEX_BUFFER_VIEW,
        ),
    >,
    pub IASetVertexBuffers: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            StartSlot: UINT,
            NumViews: UINT,
            pViews: *const D3D12_VERTEX_BUFFER_VIEW,
        ),
    >,
    pub SOSetTargets: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            StartSlot: UINT,
            NumViews: UINT,
            pViews: *const D3D12_STREAM_OUTPUT_BUFFER_VIEW,
        ),
    >,
    pub OMSetRenderTargets: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            NumRenderTargetDescriptors: UINT,
            pRenderTargetDescriptors: *const D3D12_CPU_DESCRIPTOR_HANDLE,
            RTsSingleHandleToDescriptorRange: BOOL,
            pDepthStencilDescriptor: *const D3D12_CPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub ClearDepthStencilView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            DepthStencilView: D3D12_CPU_DESCRIPTOR_HANDLE,
            ClearFlags: D3D12_CLEAR_FLAGS,
            Depth: FLOAT,
            Stencil: UINT8,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearRenderTargetView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            RenderTargetView: D3D12_CPU_DESCRIPTOR_HANDLE,
            ColorRGBA: *const FLOAT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearUnorderedAccessViewUint: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE,
            ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE,
            pResource: *mut ID3D12Resource,
            Values: *const UINT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearUnorderedAccessViewFloat: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE,
            ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE,
            pResource: *mut ID3D12Resource,
            Values: *const FLOAT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub DiscardResource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pResource: *mut ID3D12Resource,
            pRegion: *const D3D12_DISCARD_REGION,
        ),
    >,
    pub BeginQuery: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            Index: UINT,
        ),
    >,
    pub EndQuery: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            Index: UINT,
        ),
    >,
    pub ResolveQueryData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            StartIndex: UINT,
            NumQueries: UINT,
            pDestinationBuffer: *mut ID3D12Resource,
            AlignedDestinationBufferOffset: UINT64,
        ),
    >,
    pub SetPredication: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pBuffer: *mut ID3D12Resource,
            AlignedBufferOffset: UINT64,
            Operation: D3D12_PREDICATION_OP,
        ),
    >,
    pub SetMarker: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            Metadata: UINT,
            pData: *const ::std::os::raw::c_void,
            Size: UINT,
        ),
    >,
    pub BeginEvent: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            Metadata: UINT,
            pData: *const ::std::os::raw::c_void,
            Size: UINT,
        ),
    >,
    pub EndEvent: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList1),
    >,
    pub ExecuteIndirect: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pCommandSignature: *mut ID3D12CommandSignature,
            MaxCommandCount: UINT,
            pArgumentBuffer: *mut ID3D12Resource,
            ArgumentBufferOffset: UINT64,
            pCountBuffer: *mut ID3D12Resource,
            CountBufferOffset: UINT64,
        ),
    >,
    pub AtomicCopyBufferUINT: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            Dependencies: UINT,
            ppDependentResources: *const *mut ID3D12Resource,
            pDependentSubresourceRanges: *const D3D12_SUBRESOURCE_RANGE_UINT64,
        ),
    >,
    pub AtomicCopyBufferUINT64: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            Dependencies: UINT,
            ppDependentResources: *const *mut ID3D12Resource,
            pDependentSubresourceRanges: *const D3D12_SUBRESOURCE_RANGE_UINT64,
        ),
    >,
    pub OMSetDepthBounds: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            Min: FLOAT,
            Max: FLOAT,
        ),
    >,
    pub SetSamplePositions: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            NumSamplesPerPixel: UINT,
            NumPixels: UINT,
            pSamplePositions: *mut D3D12_SAMPLE_POSITION,
        ),
    >,
    pub ResolveSubresourceRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList1,
            pDstResource: *mut ID3D12Resource,
            DstSubresource: UINT,
            DstX: UINT,
            DstY: UINT,
            pSrcResource: *mut ID3D12Resource,
            SrcSubresource: UINT,
            pSrcRect: *mut D3D12_RECT,
            Format: DXGI_FORMAT,
            ResolveMode: D3D12_RESOLVE_MODE,
        ),
    >,
    pub SetViewInstanceMask: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList1, Mask: UINT),
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList1 {
    pub lpVtbl: *mut ID3D12GraphicsCommandList1Vtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_WRITEBUFFERIMMEDIATE_PARAMETER {
    pub Dest: D3D12_GPU_VIRTUAL_ADDRESS,
    pub Value: UINT32,
}
pub const D3D12_WRITEBUFFERIMMEDIATE_MODE_D3D12_WRITEBUFFERIMMEDIATE_MODE_DEFAULT : D3D12_WRITEBUFFERIMMEDIATE_MODE = 0 ;
pub const D3D12_WRITEBUFFERIMMEDIATE_MODE_D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_IN : D3D12_WRITEBUFFERIMMEDIATE_MODE = 1 ;
pub const D3D12_WRITEBUFFERIMMEDIATE_MODE_D3D12_WRITEBUFFERIMMEDIATE_MODE_MARKER_OUT : D3D12_WRITEBUFFERIMMEDIATE_MODE = 2 ;
pub type D3D12_WRITEBUFFERIMMEDIATE_MODE = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList2Vtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList2) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList2) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetType: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
        ) -> D3D12_COMMAND_LIST_TYPE,
    >,
    pub Close: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList2) -> HRESULT,
    >,
    pub Reset: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pAllocator: *mut ID3D12CommandAllocator,
            pInitialState: *mut ID3D12PipelineState,
        ) -> HRESULT,
    >,
    pub ClearState: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pPipelineState: *mut ID3D12PipelineState,
        ),
    >,
    pub DrawInstanced: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            VertexCountPerInstance: UINT,
            InstanceCount: UINT,
            StartVertexLocation: UINT,
            StartInstanceLocation: UINT,
        ),
    >,
    pub DrawIndexedInstanced: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            IndexCountPerInstance: UINT,
            InstanceCount: UINT,
            StartIndexLocation: UINT,
            BaseVertexLocation: INT,
            StartInstanceLocation: UINT,
        ),
    >,
    pub Dispatch: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            ThreadGroupCountX: UINT,
            ThreadGroupCountY: UINT,
            ThreadGroupCountZ: UINT,
        ),
    >,
    pub CopyBufferRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            NumBytes: UINT64,
        ),
    >,
    pub CopyTextureRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pDst: *const D3D12_TEXTURE_COPY_LOCATION,
            DstX: UINT,
            DstY: UINT,
            DstZ: UINT,
            pSrc: *const D3D12_TEXTURE_COPY_LOCATION,
            pSrcBox: *const D3D12_BOX,
        ),
    >,
    pub CopyResource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pDstResource: *mut ID3D12Resource,
            pSrcResource: *mut ID3D12Resource,
        ),
    >,
    pub CopyTiles: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pTiledResource: *mut ID3D12Resource,
            pTileRegionStartCoordinate: *const D3D12_TILED_RESOURCE_COORDINATE,
            pTileRegionSize: *const D3D12_TILE_REGION_SIZE,
            pBuffer: *mut ID3D12Resource,
            BufferStartOffsetInBytes: UINT64,
            Flags: D3D12_TILE_COPY_FLAGS,
        ),
    >,
    pub ResolveSubresource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pDstResource: *mut ID3D12Resource,
            DstSubresource: UINT,
            pSrcResource: *mut ID3D12Resource,
            SrcSubresource: UINT,
            Format: DXGI_FORMAT,
        ),
    >,
    pub IASetPrimitiveTopology: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            PrimitiveTopology: D3D12_PRIMITIVE_TOPOLOGY,
        ),
    >,
    pub RSSetViewports: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            NumViewports: UINT,
            pViewports: *const D3D12_VIEWPORT,
        ),
    >,
    pub RSSetScissorRects: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub OMSetBlendFactor: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            BlendFactor: *const FLOAT,
        ),
    >,
    pub OMSetStencilRef: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            StencilRef: UINT,
        ),
    >,
    pub SetPipelineState: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pPipelineState: *mut ID3D12PipelineState,
        ),
    >,
    pub ResourceBarrier: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            NumBarriers: UINT,
            pBarriers: *const D3D12_RESOURCE_BARRIER,
        ),
    >,
    pub ExecuteBundle: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pCommandList: *mut ID3D12GraphicsCommandList,
        ),
    >,
    pub SetDescriptorHeaps: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            NumDescriptorHeaps: UINT,
            ppDescriptorHeaps: *const *mut ID3D12DescriptorHeap,
        ),
    >,
    pub SetComputeRootSignature: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pRootSignature: *mut ID3D12RootSignature,
        ),
    >,
    pub SetGraphicsRootSignature: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pRootSignature: *mut ID3D12RootSignature,
        ),
    >,
    pub SetComputeRootDescriptorTable: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub SetGraphicsRootDescriptorTable: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub SetComputeRoot32BitConstant: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            SrcData: UINT,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetGraphicsRoot32BitConstant: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            SrcData: UINT,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetComputeRoot32BitConstants: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            Num32BitValuesToSet: UINT,
            pSrcData: *const ::std::os::raw::c_void,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetGraphicsRoot32BitConstants: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            Num32BitValuesToSet: UINT,
            pSrcData: *const ::std::os::raw::c_void,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetComputeRootConstantBufferView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootConstantBufferView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetComputeRootShaderResourceView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootShaderResourceView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetComputeRootUnorderedAccessView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootUnorderedAccessView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub IASetIndexBuffer: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pView: *const D3D12_INDEX_BUFFER_VIEW,
        ),
    >,
    pub IASetVertexBuffers: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            StartSlot: UINT,
            NumViews: UINT,
            pViews: *const D3D12_VERTEX_BUFFER_VIEW,
        ),
    >,
    pub SOSetTargets: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            StartSlot: UINT,
            NumViews: UINT,
            pViews: *const D3D12_STREAM_OUTPUT_BUFFER_VIEW,
        ),
    >,
    pub OMSetRenderTargets: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            NumRenderTargetDescriptors: UINT,
            pRenderTargetDescriptors: *const D3D12_CPU_DESCRIPTOR_HANDLE,
            RTsSingleHandleToDescriptorRange: BOOL,
            pDepthStencilDescriptor: *const D3D12_CPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub ClearDepthStencilView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            DepthStencilView: D3D12_CPU_DESCRIPTOR_HANDLE,
            ClearFlags: D3D12_CLEAR_FLAGS,
            Depth: FLOAT,
            Stencil: UINT8,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearRenderTargetView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            RenderTargetView: D3D12_CPU_DESCRIPTOR_HANDLE,
            ColorRGBA: *const FLOAT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearUnorderedAccessViewUint: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE,
            ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE,
            pResource: *mut ID3D12Resource,
            Values: *const UINT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearUnorderedAccessViewFloat: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE,
            ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE,
            pResource: *mut ID3D12Resource,
            Values: *const FLOAT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub DiscardResource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pResource: *mut ID3D12Resource,
            pRegion: *const D3D12_DISCARD_REGION,
        ),
    >,
    pub BeginQuery: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            Index: UINT,
        ),
    >,
    pub EndQuery: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            Index: UINT,
        ),
    >,
    pub ResolveQueryData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            StartIndex: UINT,
            NumQueries: UINT,
            pDestinationBuffer: *mut ID3D12Resource,
            AlignedDestinationBufferOffset: UINT64,
        ),
    >,
    pub SetPredication: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pBuffer: *mut ID3D12Resource,
            AlignedBufferOffset: UINT64,
            Operation: D3D12_PREDICATION_OP,
        ),
    >,
    pub SetMarker: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            Metadata: UINT,
            pData: *const ::std::os::raw::c_void,
            Size: UINT,
        ),
    >,
    pub BeginEvent: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            Metadata: UINT,
            pData: *const ::std::os::raw::c_void,
            Size: UINT,
        ),
    >,
    pub EndEvent: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList2),
    >,
    pub ExecuteIndirect: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pCommandSignature: *mut ID3D12CommandSignature,
            MaxCommandCount: UINT,
            pArgumentBuffer: *mut ID3D12Resource,
            ArgumentBufferOffset: UINT64,
            pCountBuffer: *mut ID3D12Resource,
            CountBufferOffset: UINT64,
        ),
    >,
    pub AtomicCopyBufferUINT: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            Dependencies: UINT,
            ppDependentResources: *const *mut ID3D12Resource,
            pDependentSubresourceRanges: *const D3D12_SUBRESOURCE_RANGE_UINT64,
        ),
    >,
    pub AtomicCopyBufferUINT64: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            Dependencies: UINT,
            ppDependentResources: *const *mut ID3D12Resource,
            pDependentSubresourceRanges: *const D3D12_SUBRESOURCE_RANGE_UINT64,
        ),
    >,
    pub OMSetDepthBounds: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            Min: FLOAT,
            Max: FLOAT,
        ),
    >,
    pub SetSamplePositions: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            NumSamplesPerPixel: UINT,
            NumPixels: UINT,
            pSamplePositions: *mut D3D12_SAMPLE_POSITION,
        ),
    >,
    pub ResolveSubresourceRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            pDstResource: *mut ID3D12Resource,
            DstSubresource: UINT,
            DstX: UINT,
            DstY: UINT,
            pSrcResource: *mut ID3D12Resource,
            SrcSubresource: UINT,
            pSrcRect: *mut D3D12_RECT,
            Format: DXGI_FORMAT,
            ResolveMode: D3D12_RESOLVE_MODE,
        ),
    >,
    pub SetViewInstanceMask: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList2, Mask: UINT),
    >,
    pub WriteBufferImmediate: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList2,
            Count: UINT,
            pParams: *const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER,
            pModes: *const D3D12_WRITEBUFFERIMMEDIATE_MODE,
        ),
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList2 {
    pub lpVtbl: *mut ID3D12GraphicsCommandList2Vtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12CommandQueueVtbl { pub QueryInterface : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , riid : * const IID , ppvObject : * mut * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub AddRef : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue) -> ULONG > , pub Release : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue) -> ULONG > , pub GetPrivateData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , guid : * const GUID , pDataSize : * mut UINT , pData : * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub SetPrivateData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , guid : * const GUID , DataSize : UINT , pData : * const :: std :: os :: raw :: c_void) -> HRESULT > , pub SetPrivateDataInterface : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , guid : * const GUID , pData : * const IUnknown) -> HRESULT > , pub SetName : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , Name : LPCWSTR) -> HRESULT > , pub GetDevice : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , riid : * const IID , ppvDevice : * mut * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub UpdateTileMappings : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , pResource : * mut ID3D12Resource , NumResourceRegions : UINT , pResourceRegionStartCoordinates : * const D3D12_TILED_RESOURCE_COORDINATE , pResourceRegionSizes : * const D3D12_TILE_REGION_SIZE , pHeap : * mut ID3D12Heap , NumRanges : UINT , pRangeFlags : * const D3D12_TILE_RANGE_FLAGS , pHeapRangeStartOffsets : * const UINT , pRangeTileCounts : * const UINT , Flags : D3D12_TILE_MAPPING_FLAGS) > , pub CopyTileMappings : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , pDstResource : * mut ID3D12Resource , pDstRegionStartCoordinate : * const D3D12_TILED_RESOURCE_COORDINATE , pSrcResource : * mut ID3D12Resource , pSrcRegionStartCoordinate : * const D3D12_TILED_RESOURCE_COORDINATE , pRegionSize : * const D3D12_TILE_REGION_SIZE , Flags : D3D12_TILE_MAPPING_FLAGS) > , pub ExecuteCommandLists : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , NumCommandLists : UINT , ppCommandLists : * const * mut ID3D12CommandList) > , pub SetMarker : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , Metadata : UINT , pData : * const :: std :: os :: raw :: c_void , Size : UINT) > , pub BeginEvent : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , Metadata : UINT , pData : * const :: std :: os :: raw :: c_void , Size : UINT) > , pub EndEvent : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue) > , pub Signal : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , pFence : * mut ID3D12Fence , Value : UINT64) -> HRESULT > , pub Wait : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , pFence : * mut ID3D12Fence , Value : UINT64) -> HRESULT > , pub GetTimestampFrequency : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , pFrequency : * mut UINT64) -> HRESULT > , pub GetClockCalibration : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , pGpuTimestamp : * mut UINT64 , pCpuTimestamp : * mut UINT64) -> HRESULT > , pub GetDesc : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12CommandQueue , RetVal : * mut D3D12_COMMAND_QUEUE_DESC) -> * mut D3D12_COMMAND_QUEUE_DESC > , }
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12CommandQueue {
    pub lpVtbl: *mut ID3D12CommandQueueVtbl,
}
pub const D3D12_PROTECTED_SESSION_STATUS_D3D12_PROTECTED_SESSION_STATUS_OK:
    D3D12_PROTECTED_SESSION_STATUS = 0;
pub const D3D12_PROTECTED_SESSION_STATUS_D3D12_PROTECTED_SESSION_STATUS_INVALID : D3D12_PROTECTED_SESSION_STATUS = 1 ;
pub type D3D12_PROTECTED_SESSION_STATUS = ::std::os::raw::c_int;
pub const D3D12_PROTECTED_RESOURCE_SESSION_FLAGS_D3D12_PROTECTED_RESOURCE_SESSION_FLAG_NONE : D3D12_PROTECTED_RESOURCE_SESSION_FLAGS = 0 ;
pub type D3D12_PROTECTED_RESOURCE_SESSION_FLAGS = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_PROTECTED_RESOURCE_SESSION_DESC {
    pub NodeMask: UINT,
    pub Flags: D3D12_PROTECTED_RESOURCE_SESSION_FLAGS,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12ProtectedResourceSessionVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
        ) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
        ) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetStatusFence: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
            riid: *const IID,
            ppFence: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetSessionStatus: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
        ) -> D3D12_PROTECTED_SESSION_STATUS,
    >,
    pub GetDesc: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12ProtectedResourceSession,
            RetVal: *mut D3D12_PROTECTED_RESOURCE_SESSION_DESC,
        )
            -> *mut D3D12_PROTECTED_RESOURCE_SESSION_DESC,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12ProtectedResourceSession {
    pub lpVtbl: *mut ID3D12ProtectedResourceSessionVtbl,
}
pub const D3D12_META_COMMAND_PARAMETER_STAGE_D3D12_META_COMMAND_PARAMETER_STAGE_CREATION : D3D12_META_COMMAND_PARAMETER_STAGE = 0 ;
pub const D3D12_META_COMMAND_PARAMETER_STAGE_D3D12_META_COMMAND_PARAMETER_STAGE_INITIALIZATION : D3D12_META_COMMAND_PARAMETER_STAGE = 1 ;
pub const D3D12_META_COMMAND_PARAMETER_STAGE_D3D12_META_COMMAND_PARAMETER_STAGE_EXECUTION : D3D12_META_COMMAND_PARAMETER_STAGE = 2 ;
pub type D3D12_META_COMMAND_PARAMETER_STAGE = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12StateObjectVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12StateObject,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12StateObject) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12StateObject) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12StateObject,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12StateObject,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12StateObject,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12StateObject,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12StateObject,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12StateObject {
    pub lpVtbl: *mut ID3D12StateObjectVtbl,
}
pub const D3D12_RAYTRACING_GEOMETRY_FLAGS_D3D12_RAYTRACING_GEOMETRY_FLAG_NONE : D3D12_RAYTRACING_GEOMETRY_FLAGS = 0 ;
pub const D3D12_RAYTRACING_GEOMETRY_FLAGS_D3D12_RAYTRACING_GEOMETRY_FLAG_OPAQUE : D3D12_RAYTRACING_GEOMETRY_FLAGS = 1 ;
pub const D3D12_RAYTRACING_GEOMETRY_FLAGS_D3D12_RAYTRACING_GEOMETRY_FLAG_NO_DUPLICATE_ANYHIT_INVOCATION : D3D12_RAYTRACING_GEOMETRY_FLAGS = 2 ;
pub type D3D12_RAYTRACING_GEOMETRY_FLAGS = ::std::os::raw::c_int;
pub const D3D12_RAYTRACING_GEOMETRY_TYPE_D3D12_RAYTRACING_GEOMETRY_TYPE_TRIANGLES : D3D12_RAYTRACING_GEOMETRY_TYPE = 0 ;
pub const D3D12_RAYTRACING_GEOMETRY_TYPE_D3D12_RAYTRACING_GEOMETRY_TYPE_PROCEDURAL_PRIMITIVE_AABBS : D3D12_RAYTRACING_GEOMETRY_TYPE = 1 ;
pub type D3D12_RAYTRACING_GEOMETRY_TYPE = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE {
    pub StartAddress: D3D12_GPU_VIRTUAL_ADDRESS,
    pub StrideInBytes: UINT64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE {
    pub StartAddress: D3D12_GPU_VIRTUAL_ADDRESS,
    pub SizeInBytes: UINT64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE {
    pub StartAddress: D3D12_GPU_VIRTUAL_ADDRESS,
    pub SizeInBytes: UINT64,
    pub StrideInBytes: UINT64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC {
    pub Transform3x4: D3D12_GPU_VIRTUAL_ADDRESS,
    pub IndexFormat: DXGI_FORMAT,
    pub VertexFormat: DXGI_FORMAT,
    pub IndexCount: UINT,
    pub VertexCount: UINT,
    pub IndexBuffer: D3D12_GPU_VIRTUAL_ADDRESS,
    pub VertexBuffer: D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RAYTRACING_GEOMETRY_AABBS_DESC {
    pub AABBCount: UINT64,
    pub AABBs: D3D12_GPU_VIRTUAL_ADDRESS_AND_STRIDE,
}
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_NONE : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS = 0 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_UPDATE : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS = 1 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_ALLOW_COMPACTION : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS = 2 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_TRACE : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS = 4 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PREFER_FAST_BUILD : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS = 8 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_MINIMIZE_MEMORY : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS = 16 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAG_PERFORM_UPDATE : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS = 32 ;
pub type D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS =
    ::std::os::raw::c_int;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_CLONE : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE = 0 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_COMPACT : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE = 1 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_VISUALIZATION_DECODE_FOR_TOOLS : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE = 2 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_SERIALIZE : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE = 3 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE_DESERIALIZE : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE = 4 ;
pub type D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE =
    ::std::os::raw::c_int;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE = 0 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE = 1 ;
pub type D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE = ::std::os::raw::c_int;
pub const D3D12_ELEMENTS_LAYOUT_D3D12_ELEMENTS_LAYOUT_ARRAY:
    D3D12_ELEMENTS_LAYOUT = 0;
pub const D3D12_ELEMENTS_LAYOUT_D3D12_ELEMENTS_LAYOUT_ARRAY_OF_POINTERS:
    D3D12_ELEMENTS_LAYOUT = 1;
pub type D3D12_ELEMENTS_LAYOUT = ::std::os::raw::c_int;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_COMPACTED_SIZE : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE = 0 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TOOLS_VISUALIZATION : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE = 1 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_SERIALIZATION : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE = 2 ;
pub const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE_D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_CURRENT_SIZE : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE = 3 ;
pub type D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE =
    ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC {
    pub DestBuffer: D3D12_GPU_VIRTUAL_ADDRESS,
    pub InfoType: D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_RAYTRACING_GEOMETRY_DESC {
    pub Type: D3D12_RAYTRACING_GEOMETRY_TYPE,
    pub Flags: D3D12_RAYTRACING_GEOMETRY_FLAGS,
    pub __bindgen_anon_1: D3D12_RAYTRACING_GEOMETRY_DESC__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union D3D12_RAYTRACING_GEOMETRY_DESC__bindgen_ty_1 {
    pub Triangles: D3D12_RAYTRACING_GEOMETRY_TRIANGLES_DESC,
    pub AABBs: D3D12_RAYTRACING_GEOMETRY_AABBS_DESC,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS {
    pub Type: D3D12_RAYTRACING_ACCELERATION_STRUCTURE_TYPE,
    pub Flags: D3D12_RAYTRACING_ACCELERATION_STRUCTURE_BUILD_FLAGS,
    pub NumDescs: UINT,
    pub DescsLayout: D3D12_ELEMENTS_LAYOUT,
    pub __bindgen_anon_1:
        D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS__bindgen_ty_1 {
    pub InstanceDescs: D3D12_GPU_VIRTUAL_ADDRESS,
    pub pGeometryDescs: *const D3D12_RAYTRACING_GEOMETRY_DESC,
    pub ppGeometryDescs: *const *const D3D12_RAYTRACING_GEOMETRY_DESC,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC {
    pub DestAccelerationStructureData: D3D12_GPU_VIRTUAL_ADDRESS,
    pub Inputs: D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS,
    pub SourceAccelerationStructureData: D3D12_GPU_VIRTUAL_ADDRESS,
    pub ScratchAccelerationStructureData: D3D12_GPU_VIRTUAL_ADDRESS,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList3Vtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList3) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList3) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetType: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
        ) -> D3D12_COMMAND_LIST_TYPE,
    >,
    pub Close: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList3) -> HRESULT,
    >,
    pub Reset: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pAllocator: *mut ID3D12CommandAllocator,
            pInitialState: *mut ID3D12PipelineState,
        ) -> HRESULT,
    >,
    pub ClearState: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pPipelineState: *mut ID3D12PipelineState,
        ),
    >,
    pub DrawInstanced: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            VertexCountPerInstance: UINT,
            InstanceCount: UINT,
            StartVertexLocation: UINT,
            StartInstanceLocation: UINT,
        ),
    >,
    pub DrawIndexedInstanced: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            IndexCountPerInstance: UINT,
            InstanceCount: UINT,
            StartIndexLocation: UINT,
            BaseVertexLocation: INT,
            StartInstanceLocation: UINT,
        ),
    >,
    pub Dispatch: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            ThreadGroupCountX: UINT,
            ThreadGroupCountY: UINT,
            ThreadGroupCountZ: UINT,
        ),
    >,
    pub CopyBufferRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            NumBytes: UINT64,
        ),
    >,
    pub CopyTextureRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pDst: *const D3D12_TEXTURE_COPY_LOCATION,
            DstX: UINT,
            DstY: UINT,
            DstZ: UINT,
            pSrc: *const D3D12_TEXTURE_COPY_LOCATION,
            pSrcBox: *const D3D12_BOX,
        ),
    >,
    pub CopyResource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pDstResource: *mut ID3D12Resource,
            pSrcResource: *mut ID3D12Resource,
        ),
    >,
    pub CopyTiles: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pTiledResource: *mut ID3D12Resource,
            pTileRegionStartCoordinate: *const D3D12_TILED_RESOURCE_COORDINATE,
            pTileRegionSize: *const D3D12_TILE_REGION_SIZE,
            pBuffer: *mut ID3D12Resource,
            BufferStartOffsetInBytes: UINT64,
            Flags: D3D12_TILE_COPY_FLAGS,
        ),
    >,
    pub ResolveSubresource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pDstResource: *mut ID3D12Resource,
            DstSubresource: UINT,
            pSrcResource: *mut ID3D12Resource,
            SrcSubresource: UINT,
            Format: DXGI_FORMAT,
        ),
    >,
    pub IASetPrimitiveTopology: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            PrimitiveTopology: D3D12_PRIMITIVE_TOPOLOGY,
        ),
    >,
    pub RSSetViewports: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            NumViewports: UINT,
            pViewports: *const D3D12_VIEWPORT,
        ),
    >,
    pub RSSetScissorRects: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub OMSetBlendFactor: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            BlendFactor: *const FLOAT,
        ),
    >,
    pub OMSetStencilRef: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            StencilRef: UINT,
        ),
    >,
    pub SetPipelineState: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pPipelineState: *mut ID3D12PipelineState,
        ),
    >,
    pub ResourceBarrier: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            NumBarriers: UINT,
            pBarriers: *const D3D12_RESOURCE_BARRIER,
        ),
    >,
    pub ExecuteBundle: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pCommandList: *mut ID3D12GraphicsCommandList,
        ),
    >,
    pub SetDescriptorHeaps: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            NumDescriptorHeaps: UINT,
            ppDescriptorHeaps: *const *mut ID3D12DescriptorHeap,
        ),
    >,
    pub SetComputeRootSignature: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pRootSignature: *mut ID3D12RootSignature,
        ),
    >,
    pub SetGraphicsRootSignature: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pRootSignature: *mut ID3D12RootSignature,
        ),
    >,
    pub SetComputeRootDescriptorTable: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub SetGraphicsRootDescriptorTable: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            BaseDescriptor: D3D12_GPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub SetComputeRoot32BitConstant: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            SrcData: UINT,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetGraphicsRoot32BitConstant: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            SrcData: UINT,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetComputeRoot32BitConstants: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            Num32BitValuesToSet: UINT,
            pSrcData: *const ::std::os::raw::c_void,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetGraphicsRoot32BitConstants: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            Num32BitValuesToSet: UINT,
            pSrcData: *const ::std::os::raw::c_void,
            DestOffsetIn32BitValues: UINT,
        ),
    >,
    pub SetComputeRootConstantBufferView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootConstantBufferView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetComputeRootShaderResourceView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootShaderResourceView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetComputeRootUnorderedAccessView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub SetGraphicsRootUnorderedAccessView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RootParameterIndex: UINT,
            BufferLocation: D3D12_GPU_VIRTUAL_ADDRESS,
        ),
    >,
    pub IASetIndexBuffer: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pView: *const D3D12_INDEX_BUFFER_VIEW,
        ),
    >,
    pub IASetVertexBuffers: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            StartSlot: UINT,
            NumViews: UINT,
            pViews: *const D3D12_VERTEX_BUFFER_VIEW,
        ),
    >,
    pub SOSetTargets: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            StartSlot: UINT,
            NumViews: UINT,
            pViews: *const D3D12_STREAM_OUTPUT_BUFFER_VIEW,
        ),
    >,
    pub OMSetRenderTargets: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            NumRenderTargetDescriptors: UINT,
            pRenderTargetDescriptors: *const D3D12_CPU_DESCRIPTOR_HANDLE,
            RTsSingleHandleToDescriptorRange: BOOL,
            pDepthStencilDescriptor: *const D3D12_CPU_DESCRIPTOR_HANDLE,
        ),
    >,
    pub ClearDepthStencilView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            DepthStencilView: D3D12_CPU_DESCRIPTOR_HANDLE,
            ClearFlags: D3D12_CLEAR_FLAGS,
            Depth: FLOAT,
            Stencil: UINT8,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearRenderTargetView: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            RenderTargetView: D3D12_CPU_DESCRIPTOR_HANDLE,
            ColorRGBA: *const FLOAT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearUnorderedAccessViewUint: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE,
            ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE,
            pResource: *mut ID3D12Resource,
            Values: *const UINT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub ClearUnorderedAccessViewFloat: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            ViewGPUHandleInCurrentHeap: D3D12_GPU_DESCRIPTOR_HANDLE,
            ViewCPUHandle: D3D12_CPU_DESCRIPTOR_HANDLE,
            pResource: *mut ID3D12Resource,
            Values: *const FLOAT,
            NumRects: UINT,
            pRects: *const D3D12_RECT,
        ),
    >,
    pub DiscardResource: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pResource: *mut ID3D12Resource,
            pRegion: *const D3D12_DISCARD_REGION,
        ),
    >,
    pub BeginQuery: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            Index: UINT,
        ),
    >,
    pub EndQuery: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            Index: UINT,
        ),
    >,
    pub ResolveQueryData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pQueryHeap: *mut ID3D12QueryHeap,
            Type: D3D12_QUERY_TYPE,
            StartIndex: UINT,
            NumQueries: UINT,
            pDestinationBuffer: *mut ID3D12Resource,
            AlignedDestinationBufferOffset: UINT64,
        ),
    >,
    pub SetPredication: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pBuffer: *mut ID3D12Resource,
            AlignedBufferOffset: UINT64,
            Operation: D3D12_PREDICATION_OP,
        ),
    >,
    pub SetMarker: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            Metadata: UINT,
            pData: *const ::std::os::raw::c_void,
            Size: UINT,
        ),
    >,
    pub BeginEvent: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            Metadata: UINT,
            pData: *const ::std::os::raw::c_void,
            Size: UINT,
        ),
    >,
    pub EndEvent: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList3),
    >,
    pub ExecuteIndirect: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pCommandSignature: *mut ID3D12CommandSignature,
            MaxCommandCount: UINT,
            pArgumentBuffer: *mut ID3D12Resource,
            ArgumentBufferOffset: UINT64,
            pCountBuffer: *mut ID3D12Resource,
            CountBufferOffset: UINT64,
        ),
    >,
    pub AtomicCopyBufferUINT: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            Dependencies: UINT,
            ppDependentResources: *const *mut ID3D12Resource,
            pDependentSubresourceRanges: *const D3D12_SUBRESOURCE_RANGE_UINT64,
        ),
    >,
    pub AtomicCopyBufferUINT64: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pDstBuffer: *mut ID3D12Resource,
            DstOffset: UINT64,
            pSrcBuffer: *mut ID3D12Resource,
            SrcOffset: UINT64,
            Dependencies: UINT,
            ppDependentResources: *const *mut ID3D12Resource,
            pDependentSubresourceRanges: *const D3D12_SUBRESOURCE_RANGE_UINT64,
        ),
    >,
    pub OMSetDepthBounds: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            Min: FLOAT,
            Max: FLOAT,
        ),
    >,
    pub SetSamplePositions: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            NumSamplesPerPixel: UINT,
            NumPixels: UINT,
            pSamplePositions: *mut D3D12_SAMPLE_POSITION,
        ),
    >,
    pub ResolveSubresourceRegion: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pDstResource: *mut ID3D12Resource,
            DstSubresource: UINT,
            DstX: UINT,
            DstY: UINT,
            pSrcResource: *mut ID3D12Resource,
            SrcSubresource: UINT,
            pSrcRect: *mut D3D12_RECT,
            Format: DXGI_FORMAT,
            ResolveMode: D3D12_RESOLVE_MODE,
        ),
    >,
    pub SetViewInstanceMask: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12GraphicsCommandList3, Mask: UINT),
    >,
    pub WriteBufferImmediate: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            Count: UINT,
            pParams: *const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER,
            pModes: *const D3D12_WRITEBUFFERIMMEDIATE_MODE,
        ),
    >,
    pub SetProtectedResourceSession: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12GraphicsCommandList3,
            pProtectedResourceSession: *mut ID3D12ProtectedResourceSession,
        ),
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList3 {
    pub lpVtbl: *mut ID3D12GraphicsCommandList3Vtbl,
}
pub const D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD : D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE = 0 ;
pub const D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE : D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE = 1 ;
pub const D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR : D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE = 2 ;
pub const D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_NO_ACCESS : D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE = 3 ;
pub type D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS {
    pub ClearValue: D3D12_CLEAR_VALUE,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_RENDER_PASS_BEGINNING_ACCESS {
    pub Type: D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE,
    pub __bindgen_anon_1: D3D12_RENDER_PASS_BEGINNING_ACCESS__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union D3D12_RENDER_PASS_BEGINNING_ACCESS__bindgen_ty_1 {
    pub Clear: D3D12_RENDER_PASS_BEGINNING_ACCESS_CLEAR_PARAMETERS,
}
pub const D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD : D3D12_RENDER_PASS_ENDING_ACCESS_TYPE = 0 ;
pub const D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE : D3D12_RENDER_PASS_ENDING_ACCESS_TYPE = 1 ;
pub const D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE : D3D12_RENDER_PASS_ENDING_ACCESS_TYPE = 2 ;
pub const D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_NO_ACCESS : D3D12_RENDER_PASS_ENDING_ACCESS_TYPE = 3 ;
pub type D3D12_RENDER_PASS_ENDING_ACCESS_TYPE = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS {
    pub SrcSubresource: UINT,
    pub DstSubresource: UINT,
    pub DstX: UINT,
    pub DstY: UINT,
    pub SrcRect: D3D12_RECT,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS {
    pub pSrcResource: *mut ID3D12Resource,
    pub pDstResource: *mut ID3D12Resource,
    pub SubresourceCount: UINT,
    pub pSubresourceParameters:
        *const D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_SUBRESOURCE_PARAMETERS,
    pub Format: DXGI_FORMAT,
    pub ResolveMode: D3D12_RESOLVE_MODE,
    pub PreserveResolveSource: BOOL,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_RENDER_PASS_ENDING_ACCESS {
    pub Type: D3D12_RENDER_PASS_ENDING_ACCESS_TYPE,
    pub __bindgen_anon_1: D3D12_RENDER_PASS_ENDING_ACCESS__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union D3D12_RENDER_PASS_ENDING_ACCESS__bindgen_ty_1 {
    pub Resolve: D3D12_RENDER_PASS_ENDING_ACCESS_RESOLVE_PARAMETERS,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_RENDER_PASS_RENDER_TARGET_DESC {
    pub cpuDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE,
    pub BeginningAccess: D3D12_RENDER_PASS_BEGINNING_ACCESS,
    pub EndingAccess: D3D12_RENDER_PASS_ENDING_ACCESS,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct D3D12_RENDER_PASS_DEPTH_STENCIL_DESC {
    pub cpuDescriptor: D3D12_CPU_DESCRIPTOR_HANDLE,
    pub DepthBeginningAccess: D3D12_RENDER_PASS_BEGINNING_ACCESS,
    pub StencilBeginningAccess: D3D12_RENDER_PASS_BEGINNING_ACCESS,
    pub DepthEndingAccess: D3D12_RENDER_PASS_ENDING_ACCESS,
    pub StencilEndingAccess: D3D12_RENDER_PASS_ENDING_ACCESS,
}
pub const D3D12_RENDER_PASS_FLAGS_D3D12_RENDER_PASS_FLAG_NONE:
    D3D12_RENDER_PASS_FLAGS = 0;
pub const D3D12_RENDER_PASS_FLAGS_D3D12_RENDER_PASS_FLAG_ALLOW_UAV_WRITES:
    D3D12_RENDER_PASS_FLAGS = 1;
pub const D3D12_RENDER_PASS_FLAGS_D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS:
    D3D12_RENDER_PASS_FLAGS = 2;
pub const D3D12_RENDER_PASS_FLAGS_D3D12_RENDER_PASS_FLAG_RESUMING_PASS:
    D3D12_RENDER_PASS_FLAGS = 4;
pub type D3D12_RENDER_PASS_FLAGS = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12MetaCommandVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12MetaCommand,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12MetaCommand) -> ULONG,
    >,
    pub Release: ::std::option::Option<
        unsafe extern "C" fn(This: *mut ID3D12MetaCommand) -> ULONG,
    >,
    pub GetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12MetaCommand,
            guid: *const GUID,
            pDataSize: *mut UINT,
            pData: *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateData: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12MetaCommand,
            guid: *const GUID,
            DataSize: UINT,
            pData: *const ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub SetPrivateDataInterface: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12MetaCommand,
            guid: *const GUID,
            pData: *const IUnknown,
        ) -> HRESULT,
    >,
    pub SetName: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12MetaCommand,
            Name: LPCWSTR,
        ) -> HRESULT,
    >,
    pub GetDevice: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12MetaCommand,
            riid: *const IID,
            ppvDevice: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub GetRequiredParameterResourceSize: ::std::option::Option<
        unsafe extern "C" fn(
            This: *mut ID3D12MetaCommand,
            Stage: D3D12_META_COMMAND_PARAMETER_STAGE,
            ParameterIndex: UINT,
        ) -> UINT64,
    >,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12MetaCommand {
    pub lpVtbl: *mut ID3D12MetaCommandVtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct D3D12_DISPATCH_RAYS_DESC {
    pub RayGenerationShaderRecord: D3D12_GPU_VIRTUAL_ADDRESS_RANGE,
    pub MissShaderTable: D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE,
    pub HitGroupTable: D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE,
    pub CallableShaderTable: D3D12_GPU_VIRTUAL_ADDRESS_RANGE_AND_STRIDE,
    pub Width: UINT,
    pub Height: UINT,
    pub Depth: UINT,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList4Vtbl { pub QueryInterface : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , riid : * const IID , ppvObject : * mut * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub AddRef : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4) -> ULONG > , pub Release : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4) -> ULONG > , pub GetPrivateData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , guid : * const GUID , pDataSize : * mut UINT , pData : * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub SetPrivateData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , guid : * const GUID , DataSize : UINT , pData : * const :: std :: os :: raw :: c_void) -> HRESULT > , pub SetPrivateDataInterface : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , guid : * const GUID , pData : * const IUnknown) -> HRESULT > , pub SetName : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , Name : LPCWSTR) -> HRESULT > , pub GetDevice : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , riid : * const IID , ppvDevice : * mut * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub GetType : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4) -> D3D12_COMMAND_LIST_TYPE > , pub Close : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4) -> HRESULT > , pub Reset : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pAllocator : * mut ID3D12CommandAllocator , pInitialState : * mut ID3D12PipelineState) -> HRESULT > , pub ClearState : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pPipelineState : * mut ID3D12PipelineState) > , pub DrawInstanced : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , VertexCountPerInstance : UINT , InstanceCount : UINT , StartVertexLocation : UINT , StartInstanceLocation : UINT) > , pub DrawIndexedInstanced : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , IndexCountPerInstance : UINT , InstanceCount : UINT , StartIndexLocation : UINT , BaseVertexLocation : INT , StartInstanceLocation : UINT) > , pub Dispatch : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , ThreadGroupCountX : UINT , ThreadGroupCountY : UINT , ThreadGroupCountZ : UINT) > , pub CopyBufferRegion : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDstBuffer : * mut ID3D12Resource , DstOffset : UINT64 , pSrcBuffer : * mut ID3D12Resource , SrcOffset : UINT64 , NumBytes : UINT64) > , pub CopyTextureRegion : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDst : * const D3D12_TEXTURE_COPY_LOCATION , DstX : UINT , DstY : UINT , DstZ : UINT , pSrc : * const D3D12_TEXTURE_COPY_LOCATION , pSrcBox : * const D3D12_BOX) > , pub CopyResource : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDstResource : * mut ID3D12Resource , pSrcResource : * mut ID3D12Resource) > , pub CopyTiles : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pTiledResource : * mut ID3D12Resource , pTileRegionStartCoordinate : * const D3D12_TILED_RESOURCE_COORDINATE , pTileRegionSize : * const D3D12_TILE_REGION_SIZE , pBuffer : * mut ID3D12Resource , BufferStartOffsetInBytes : UINT64 , Flags : D3D12_TILE_COPY_FLAGS) > , pub ResolveSubresource : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDstResource : * mut ID3D12Resource , DstSubresource : UINT , pSrcResource : * mut ID3D12Resource , SrcSubresource : UINT , Format : DXGI_FORMAT) > , pub IASetPrimitiveTopology : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , PrimitiveTopology : D3D12_PRIMITIVE_TOPOLOGY) > , pub RSSetViewports : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , NumViewports : UINT , pViewports : * const D3D12_VIEWPORT) > , pub RSSetScissorRects : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , NumRects : UINT , pRects : * const D3D12_RECT) > , pub OMSetBlendFactor : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , BlendFactor : * const FLOAT) > , pub OMSetStencilRef : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , StencilRef : UINT) > , pub SetPipelineState : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pPipelineState : * mut ID3D12PipelineState) > , pub ResourceBarrier : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , NumBarriers : UINT , pBarriers : * const D3D12_RESOURCE_BARRIER) > , pub ExecuteBundle : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pCommandList : * mut ID3D12GraphicsCommandList) > , pub SetDescriptorHeaps : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , NumDescriptorHeaps : UINT , ppDescriptorHeaps : * const * mut ID3D12DescriptorHeap) > , pub SetComputeRootSignature : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pRootSignature : * mut ID3D12RootSignature) > , pub SetGraphicsRootSignature : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pRootSignature : * mut ID3D12RootSignature) > , pub SetComputeRootDescriptorTable : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , BaseDescriptor : D3D12_GPU_DESCRIPTOR_HANDLE) > , pub SetGraphicsRootDescriptorTable : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , BaseDescriptor : D3D12_GPU_DESCRIPTOR_HANDLE) > , pub SetComputeRoot32BitConstant : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , SrcData : UINT , DestOffsetIn32BitValues : UINT) > , pub SetGraphicsRoot32BitConstant : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , SrcData : UINT , DestOffsetIn32BitValues : UINT) > , pub SetComputeRoot32BitConstants : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , Num32BitValuesToSet : UINT , pSrcData : * const :: std :: os :: raw :: c_void , DestOffsetIn32BitValues : UINT) > , pub SetGraphicsRoot32BitConstants : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , Num32BitValuesToSet : UINT , pSrcData : * const :: std :: os :: raw :: c_void , DestOffsetIn32BitValues : UINT) > , pub SetComputeRootConstantBufferView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetGraphicsRootConstantBufferView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetComputeRootShaderResourceView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetGraphicsRootShaderResourceView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetComputeRootUnorderedAccessView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetGraphicsRootUnorderedAccessView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub IASetIndexBuffer : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pView : * const D3D12_INDEX_BUFFER_VIEW) > , pub IASetVertexBuffers : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , StartSlot : UINT , NumViews : UINT , pViews : * const D3D12_VERTEX_BUFFER_VIEW) > , pub SOSetTargets : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , StartSlot : UINT , NumViews : UINT , pViews : * const D3D12_STREAM_OUTPUT_BUFFER_VIEW) > , pub OMSetRenderTargets : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , NumRenderTargetDescriptors : UINT , pRenderTargetDescriptors : * const D3D12_CPU_DESCRIPTOR_HANDLE , RTsSingleHandleToDescriptorRange : BOOL , pDepthStencilDescriptor : * const D3D12_CPU_DESCRIPTOR_HANDLE) > , pub ClearDepthStencilView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , DepthStencilView : D3D12_CPU_DESCRIPTOR_HANDLE , ClearFlags : D3D12_CLEAR_FLAGS , Depth : FLOAT , Stencil : UINT8 , NumRects : UINT , pRects : * const D3D12_RECT) > , pub ClearRenderTargetView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , RenderTargetView : D3D12_CPU_DESCRIPTOR_HANDLE , ColorRGBA : * const FLOAT , NumRects : UINT , pRects : * const D3D12_RECT) > , pub ClearUnorderedAccessViewUint : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , ViewGPUHandleInCurrentHeap : D3D12_GPU_DESCRIPTOR_HANDLE , ViewCPUHandle : D3D12_CPU_DESCRIPTOR_HANDLE , pResource : * mut ID3D12Resource , Values : * const UINT , NumRects : UINT , pRects : * const D3D12_RECT) > , pub ClearUnorderedAccessViewFloat : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , ViewGPUHandleInCurrentHeap : D3D12_GPU_DESCRIPTOR_HANDLE , ViewCPUHandle : D3D12_CPU_DESCRIPTOR_HANDLE , pResource : * mut ID3D12Resource , Values : * const FLOAT , NumRects : UINT , pRects : * const D3D12_RECT) > , pub DiscardResource : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pResource : * mut ID3D12Resource , pRegion : * const D3D12_DISCARD_REGION) > , pub BeginQuery : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pQueryHeap : * mut ID3D12QueryHeap , Type : D3D12_QUERY_TYPE , Index : UINT) > , pub EndQuery : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pQueryHeap : * mut ID3D12QueryHeap , Type : D3D12_QUERY_TYPE , Index : UINT) > , pub ResolveQueryData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pQueryHeap : * mut ID3D12QueryHeap , Type : D3D12_QUERY_TYPE , StartIndex : UINT , NumQueries : UINT , pDestinationBuffer : * mut ID3D12Resource , AlignedDestinationBufferOffset : UINT64) > , pub SetPredication : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pBuffer : * mut ID3D12Resource , AlignedBufferOffset : UINT64 , Operation : D3D12_PREDICATION_OP) > , pub SetMarker : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , Metadata : UINT , pData : * const :: std :: os :: raw :: c_void , Size : UINT) > , pub BeginEvent : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , Metadata : UINT , pData : * const :: std :: os :: raw :: c_void , Size : UINT) > , pub EndEvent : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4) > , pub ExecuteIndirect : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pCommandSignature : * mut ID3D12CommandSignature , MaxCommandCount : UINT , pArgumentBuffer : * mut ID3D12Resource , ArgumentBufferOffset : UINT64 , pCountBuffer : * mut ID3D12Resource , CountBufferOffset : UINT64) > , pub AtomicCopyBufferUINT : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDstBuffer : * mut ID3D12Resource , DstOffset : UINT64 , pSrcBuffer : * mut ID3D12Resource , SrcOffset : UINT64 , Dependencies : UINT , ppDependentResources : * const * mut ID3D12Resource , pDependentSubresourceRanges : * const D3D12_SUBRESOURCE_RANGE_UINT64) > , pub AtomicCopyBufferUINT64 : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDstBuffer : * mut ID3D12Resource , DstOffset : UINT64 , pSrcBuffer : * mut ID3D12Resource , SrcOffset : UINT64 , Dependencies : UINT , ppDependentResources : * const * mut ID3D12Resource , pDependentSubresourceRanges : * const D3D12_SUBRESOURCE_RANGE_UINT64) > , pub OMSetDepthBounds : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , Min : FLOAT , Max : FLOAT) > , pub SetSamplePositions : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , NumSamplesPerPixel : UINT , NumPixels : UINT , pSamplePositions : * mut D3D12_SAMPLE_POSITION) > , pub ResolveSubresourceRegion : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDstResource : * mut ID3D12Resource , DstSubresource : UINT , DstX : UINT , DstY : UINT , pSrcResource : * mut ID3D12Resource , SrcSubresource : UINT , pSrcRect : * mut D3D12_RECT , Format : DXGI_FORMAT , ResolveMode : D3D12_RESOLVE_MODE) > , pub SetViewInstanceMask : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , Mask : UINT) > , pub WriteBufferImmediate : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , Count : UINT , pParams : * const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER , pModes : * const D3D12_WRITEBUFFERIMMEDIATE_MODE) > , pub SetProtectedResourceSession : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pProtectedResourceSession : * mut ID3D12ProtectedResourceSession) > , pub BeginRenderPass : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , NumRenderTargets : UINT , pRenderTargets : * const D3D12_RENDER_PASS_RENDER_TARGET_DESC , pDepthStencil : * const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC , Flags : D3D12_RENDER_PASS_FLAGS) > , pub EndRenderPass : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4) > , pub InitializeMetaCommand : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pMetaCommand : * mut ID3D12MetaCommand , pInitializationParametersData : * const :: std :: os :: raw :: c_void , InitializationParametersDataSizeInBytes : SIZE_T) > , pub ExecuteMetaCommand : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pMetaCommand : * mut ID3D12MetaCommand , pExecutionParametersData : * const :: std :: os :: raw :: c_void , ExecutionParametersDataSizeInBytes : SIZE_T) > , pub BuildRaytracingAccelerationStructure : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDesc : * const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC , NumPostbuildInfoDescs : UINT , pPostbuildInfoDescs : * const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC) > , pub EmitRaytracingAccelerationStructurePostbuildInfo : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDesc : * const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC , NumSourceAccelerationStructures : UINT , pSourceAccelerationStructureData : * const D3D12_GPU_VIRTUAL_ADDRESS) > , pub CopyRaytracingAccelerationStructure : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , DestAccelerationStructureData : D3D12_GPU_VIRTUAL_ADDRESS , SourceAccelerationStructureData : D3D12_GPU_VIRTUAL_ADDRESS , Mode : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE) > , pub SetPipelineState1 : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pStateObject : * mut ID3D12StateObject) > , pub DispatchRays : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList4 , pDesc : * const D3D12_DISPATCH_RAYS_DESC) > , }
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList4 {
    pub lpVtbl: *mut ID3D12GraphicsCommandList4Vtbl,
}
pub const D3D12_SHADING_RATE_D3D12_SHADING_RATE_1X1: D3D12_SHADING_RATE = 0;
pub const D3D12_SHADING_RATE_D3D12_SHADING_RATE_1X2: D3D12_SHADING_RATE = 1;
pub const D3D12_SHADING_RATE_D3D12_SHADING_RATE_2X1: D3D12_SHADING_RATE = 4;
pub const D3D12_SHADING_RATE_D3D12_SHADING_RATE_2X2: D3D12_SHADING_RATE = 5;
pub const D3D12_SHADING_RATE_D3D12_SHADING_RATE_2X4: D3D12_SHADING_RATE = 6;
pub const D3D12_SHADING_RATE_D3D12_SHADING_RATE_4X2: D3D12_SHADING_RATE = 9;
pub const D3D12_SHADING_RATE_D3D12_SHADING_RATE_4X4: D3D12_SHADING_RATE = 10;
pub type D3D12_SHADING_RATE = ::std::os::raw::c_int;
pub const D3D12_SHADING_RATE_COMBINER_D3D12_SHADING_RATE_COMBINER_PASSTHROUGH : D3D12_SHADING_RATE_COMBINER = 0 ;
pub const D3D12_SHADING_RATE_COMBINER_D3D12_SHADING_RATE_COMBINER_OVERRIDE:
    D3D12_SHADING_RATE_COMBINER = 1;
pub const D3D12_SHADING_RATE_COMBINER_D3D12_SHADING_RATE_COMBINER_MIN:
    D3D12_SHADING_RATE_COMBINER = 2;
pub const D3D12_SHADING_RATE_COMBINER_D3D12_SHADING_RATE_COMBINER_MAX:
    D3D12_SHADING_RATE_COMBINER = 3;
pub const D3D12_SHADING_RATE_COMBINER_D3D12_SHADING_RATE_COMBINER_SUM:
    D3D12_SHADING_RATE_COMBINER = 4;
pub type D3D12_SHADING_RATE_COMBINER = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList5Vtbl { pub QueryInterface : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , riid : * const IID , ppvObject : * mut * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub AddRef : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5) -> ULONG > , pub Release : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5) -> ULONG > , pub GetPrivateData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , guid : * const GUID , pDataSize : * mut UINT , pData : * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub SetPrivateData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , guid : * const GUID , DataSize : UINT , pData : * const :: std :: os :: raw :: c_void) -> HRESULT > , pub SetPrivateDataInterface : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , guid : * const GUID , pData : * const IUnknown) -> HRESULT > , pub SetName : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , Name : LPCWSTR) -> HRESULT > , pub GetDevice : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , riid : * const IID , ppvDevice : * mut * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub GetType : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5) -> D3D12_COMMAND_LIST_TYPE > , pub Close : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5) -> HRESULT > , pub Reset : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pAllocator : * mut ID3D12CommandAllocator , pInitialState : * mut ID3D12PipelineState) -> HRESULT > , pub ClearState : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pPipelineState : * mut ID3D12PipelineState) > , pub DrawInstanced : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , VertexCountPerInstance : UINT , InstanceCount : UINT , StartVertexLocation : UINT , StartInstanceLocation : UINT) > , pub DrawIndexedInstanced : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , IndexCountPerInstance : UINT , InstanceCount : UINT , StartIndexLocation : UINT , BaseVertexLocation : INT , StartInstanceLocation : UINT) > , pub Dispatch : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , ThreadGroupCountX : UINT , ThreadGroupCountY : UINT , ThreadGroupCountZ : UINT) > , pub CopyBufferRegion : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDstBuffer : * mut ID3D12Resource , DstOffset : UINT64 , pSrcBuffer : * mut ID3D12Resource , SrcOffset : UINT64 , NumBytes : UINT64) > , pub CopyTextureRegion : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDst : * const D3D12_TEXTURE_COPY_LOCATION , DstX : UINT , DstY : UINT , DstZ : UINT , pSrc : * const D3D12_TEXTURE_COPY_LOCATION , pSrcBox : * const D3D12_BOX) > , pub CopyResource : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDstResource : * mut ID3D12Resource , pSrcResource : * mut ID3D12Resource) > , pub CopyTiles : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pTiledResource : * mut ID3D12Resource , pTileRegionStartCoordinate : * const D3D12_TILED_RESOURCE_COORDINATE , pTileRegionSize : * const D3D12_TILE_REGION_SIZE , pBuffer : * mut ID3D12Resource , BufferStartOffsetInBytes : UINT64 , Flags : D3D12_TILE_COPY_FLAGS) > , pub ResolveSubresource : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDstResource : * mut ID3D12Resource , DstSubresource : UINT , pSrcResource : * mut ID3D12Resource , SrcSubresource : UINT , Format : DXGI_FORMAT) > , pub IASetPrimitiveTopology : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , PrimitiveTopology : D3D12_PRIMITIVE_TOPOLOGY) > , pub RSSetViewports : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , NumViewports : UINT , pViewports : * const D3D12_VIEWPORT) > , pub RSSetScissorRects : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , NumRects : UINT , pRects : * const D3D12_RECT) > , pub OMSetBlendFactor : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , BlendFactor : * const FLOAT) > , pub OMSetStencilRef : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , StencilRef : UINT) > , pub SetPipelineState : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pPipelineState : * mut ID3D12PipelineState) > , pub ResourceBarrier : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , NumBarriers : UINT , pBarriers : * const D3D12_RESOURCE_BARRIER) > , pub ExecuteBundle : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pCommandList : * mut ID3D12GraphicsCommandList) > , pub SetDescriptorHeaps : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , NumDescriptorHeaps : UINT , ppDescriptorHeaps : * const * mut ID3D12DescriptorHeap) > , pub SetComputeRootSignature : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pRootSignature : * mut ID3D12RootSignature) > , pub SetGraphicsRootSignature : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pRootSignature : * mut ID3D12RootSignature) > , pub SetComputeRootDescriptorTable : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , BaseDescriptor : D3D12_GPU_DESCRIPTOR_HANDLE) > , pub SetGraphicsRootDescriptorTable : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , BaseDescriptor : D3D12_GPU_DESCRIPTOR_HANDLE) > , pub SetComputeRoot32BitConstant : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , SrcData : UINT , DestOffsetIn32BitValues : UINT) > , pub SetGraphicsRoot32BitConstant : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , SrcData : UINT , DestOffsetIn32BitValues : UINT) > , pub SetComputeRoot32BitConstants : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , Num32BitValuesToSet : UINT , pSrcData : * const :: std :: os :: raw :: c_void , DestOffsetIn32BitValues : UINT) > , pub SetGraphicsRoot32BitConstants : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , Num32BitValuesToSet : UINT , pSrcData : * const :: std :: os :: raw :: c_void , DestOffsetIn32BitValues : UINT) > , pub SetComputeRootConstantBufferView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetGraphicsRootConstantBufferView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetComputeRootShaderResourceView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetGraphicsRootShaderResourceView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetComputeRootUnorderedAccessView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetGraphicsRootUnorderedAccessView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub IASetIndexBuffer : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pView : * const D3D12_INDEX_BUFFER_VIEW) > , pub IASetVertexBuffers : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , StartSlot : UINT , NumViews : UINT , pViews : * const D3D12_VERTEX_BUFFER_VIEW) > , pub SOSetTargets : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , StartSlot : UINT , NumViews : UINT , pViews : * const D3D12_STREAM_OUTPUT_BUFFER_VIEW) > , pub OMSetRenderTargets : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , NumRenderTargetDescriptors : UINT , pRenderTargetDescriptors : * const D3D12_CPU_DESCRIPTOR_HANDLE , RTsSingleHandleToDescriptorRange : BOOL , pDepthStencilDescriptor : * const D3D12_CPU_DESCRIPTOR_HANDLE) > , pub ClearDepthStencilView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , DepthStencilView : D3D12_CPU_DESCRIPTOR_HANDLE , ClearFlags : D3D12_CLEAR_FLAGS , Depth : FLOAT , Stencil : UINT8 , NumRects : UINT , pRects : * const D3D12_RECT) > , pub ClearRenderTargetView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , RenderTargetView : D3D12_CPU_DESCRIPTOR_HANDLE , ColorRGBA : * const FLOAT , NumRects : UINT , pRects : * const D3D12_RECT) > , pub ClearUnorderedAccessViewUint : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , ViewGPUHandleInCurrentHeap : D3D12_GPU_DESCRIPTOR_HANDLE , ViewCPUHandle : D3D12_CPU_DESCRIPTOR_HANDLE , pResource : * mut ID3D12Resource , Values : * const UINT , NumRects : UINT , pRects : * const D3D12_RECT) > , pub ClearUnorderedAccessViewFloat : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , ViewGPUHandleInCurrentHeap : D3D12_GPU_DESCRIPTOR_HANDLE , ViewCPUHandle : D3D12_CPU_DESCRIPTOR_HANDLE , pResource : * mut ID3D12Resource , Values : * const FLOAT , NumRects : UINT , pRects : * const D3D12_RECT) > , pub DiscardResource : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pResource : * mut ID3D12Resource , pRegion : * const D3D12_DISCARD_REGION) > , pub BeginQuery : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pQueryHeap : * mut ID3D12QueryHeap , Type : D3D12_QUERY_TYPE , Index : UINT) > , pub EndQuery : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pQueryHeap : * mut ID3D12QueryHeap , Type : D3D12_QUERY_TYPE , Index : UINT) > , pub ResolveQueryData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pQueryHeap : * mut ID3D12QueryHeap , Type : D3D12_QUERY_TYPE , StartIndex : UINT , NumQueries : UINT , pDestinationBuffer : * mut ID3D12Resource , AlignedDestinationBufferOffset : UINT64) > , pub SetPredication : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pBuffer : * mut ID3D12Resource , AlignedBufferOffset : UINT64 , Operation : D3D12_PREDICATION_OP) > , pub SetMarker : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , Metadata : UINT , pData : * const :: std :: os :: raw :: c_void , Size : UINT) > , pub BeginEvent : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , Metadata : UINT , pData : * const :: std :: os :: raw :: c_void , Size : UINT) > , pub EndEvent : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5) > , pub ExecuteIndirect : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pCommandSignature : * mut ID3D12CommandSignature , MaxCommandCount : UINT , pArgumentBuffer : * mut ID3D12Resource , ArgumentBufferOffset : UINT64 , pCountBuffer : * mut ID3D12Resource , CountBufferOffset : UINT64) > , pub AtomicCopyBufferUINT : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDstBuffer : * mut ID3D12Resource , DstOffset : UINT64 , pSrcBuffer : * mut ID3D12Resource , SrcOffset : UINT64 , Dependencies : UINT , ppDependentResources : * const * mut ID3D12Resource , pDependentSubresourceRanges : * const D3D12_SUBRESOURCE_RANGE_UINT64) > , pub AtomicCopyBufferUINT64 : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDstBuffer : * mut ID3D12Resource , DstOffset : UINT64 , pSrcBuffer : * mut ID3D12Resource , SrcOffset : UINT64 , Dependencies : UINT , ppDependentResources : * const * mut ID3D12Resource , pDependentSubresourceRanges : * const D3D12_SUBRESOURCE_RANGE_UINT64) > , pub OMSetDepthBounds : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , Min : FLOAT , Max : FLOAT) > , pub SetSamplePositions : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , NumSamplesPerPixel : UINT , NumPixels : UINT , pSamplePositions : * mut D3D12_SAMPLE_POSITION) > , pub ResolveSubresourceRegion : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDstResource : * mut ID3D12Resource , DstSubresource : UINT , DstX : UINT , DstY : UINT , pSrcResource : * mut ID3D12Resource , SrcSubresource : UINT , pSrcRect : * mut D3D12_RECT , Format : DXGI_FORMAT , ResolveMode : D3D12_RESOLVE_MODE) > , pub SetViewInstanceMask : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , Mask : UINT) > , pub WriteBufferImmediate : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , Count : UINT , pParams : * const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER , pModes : * const D3D12_WRITEBUFFERIMMEDIATE_MODE) > , pub SetProtectedResourceSession : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pProtectedResourceSession : * mut ID3D12ProtectedResourceSession) > , pub BeginRenderPass : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , NumRenderTargets : UINT , pRenderTargets : * const D3D12_RENDER_PASS_RENDER_TARGET_DESC , pDepthStencil : * const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC , Flags : D3D12_RENDER_PASS_FLAGS) > , pub EndRenderPass : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5) > , pub InitializeMetaCommand : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pMetaCommand : * mut ID3D12MetaCommand , pInitializationParametersData : * const :: std :: os :: raw :: c_void , InitializationParametersDataSizeInBytes : SIZE_T) > , pub ExecuteMetaCommand : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pMetaCommand : * mut ID3D12MetaCommand , pExecutionParametersData : * const :: std :: os :: raw :: c_void , ExecutionParametersDataSizeInBytes : SIZE_T) > , pub BuildRaytracingAccelerationStructure : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDesc : * const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC , NumPostbuildInfoDescs : UINT , pPostbuildInfoDescs : * const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC) > , pub EmitRaytracingAccelerationStructurePostbuildInfo : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDesc : * const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC , NumSourceAccelerationStructures : UINT , pSourceAccelerationStructureData : * const D3D12_GPU_VIRTUAL_ADDRESS) > , pub CopyRaytracingAccelerationStructure : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , DestAccelerationStructureData : D3D12_GPU_VIRTUAL_ADDRESS , SourceAccelerationStructureData : D3D12_GPU_VIRTUAL_ADDRESS , Mode : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE) > , pub SetPipelineState1 : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pStateObject : * mut ID3D12StateObject) > , pub DispatchRays : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , pDesc : * const D3D12_DISPATCH_RAYS_DESC) > , pub RSSetShadingRate : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , baseShadingRate : D3D12_SHADING_RATE , combiners : * const D3D12_SHADING_RATE_COMBINER) > , pub RSSetShadingRateImage : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList5 , shadingRateImage : * mut ID3D12Resource) > , }
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList5 {
    pub lpVtbl: *mut ID3D12GraphicsCommandList5Vtbl,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList6Vtbl { pub QueryInterface : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , riid : * const IID , ppvObject : * mut * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub AddRef : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6) -> ULONG > , pub Release : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6) -> ULONG > , pub GetPrivateData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , guid : * const GUID , pDataSize : * mut UINT , pData : * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub SetPrivateData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , guid : * const GUID , DataSize : UINT , pData : * const :: std :: os :: raw :: c_void) -> HRESULT > , pub SetPrivateDataInterface : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , guid : * const GUID , pData : * const IUnknown) -> HRESULT > , pub SetName : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , Name : LPCWSTR) -> HRESULT > , pub GetDevice : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , riid : * const IID , ppvDevice : * mut * mut :: std :: os :: raw :: c_void) -> HRESULT > , pub GetType : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6) -> D3D12_COMMAND_LIST_TYPE > , pub Close : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6) -> HRESULT > , pub Reset : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pAllocator : * mut ID3D12CommandAllocator , pInitialState : * mut ID3D12PipelineState) -> HRESULT > , pub ClearState : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pPipelineState : * mut ID3D12PipelineState) > , pub DrawInstanced : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , VertexCountPerInstance : UINT , InstanceCount : UINT , StartVertexLocation : UINT , StartInstanceLocation : UINT) > , pub DrawIndexedInstanced : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , IndexCountPerInstance : UINT , InstanceCount : UINT , StartIndexLocation : UINT , BaseVertexLocation : INT , StartInstanceLocation : UINT) > , pub Dispatch : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , ThreadGroupCountX : UINT , ThreadGroupCountY : UINT , ThreadGroupCountZ : UINT) > , pub CopyBufferRegion : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDstBuffer : * mut ID3D12Resource , DstOffset : UINT64 , pSrcBuffer : * mut ID3D12Resource , SrcOffset : UINT64 , NumBytes : UINT64) > , pub CopyTextureRegion : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDst : * const D3D12_TEXTURE_COPY_LOCATION , DstX : UINT , DstY : UINT , DstZ : UINT , pSrc : * const D3D12_TEXTURE_COPY_LOCATION , pSrcBox : * const D3D12_BOX) > , pub CopyResource : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDstResource : * mut ID3D12Resource , pSrcResource : * mut ID3D12Resource) > , pub CopyTiles : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pTiledResource : * mut ID3D12Resource , pTileRegionStartCoordinate : * const D3D12_TILED_RESOURCE_COORDINATE , pTileRegionSize : * const D3D12_TILE_REGION_SIZE , pBuffer : * mut ID3D12Resource , BufferStartOffsetInBytes : UINT64 , Flags : D3D12_TILE_COPY_FLAGS) > , pub ResolveSubresource : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDstResource : * mut ID3D12Resource , DstSubresource : UINT , pSrcResource : * mut ID3D12Resource , SrcSubresource : UINT , Format : DXGI_FORMAT) > , pub IASetPrimitiveTopology : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , PrimitiveTopology : D3D12_PRIMITIVE_TOPOLOGY) > , pub RSSetViewports : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , NumViewports : UINT , pViewports : * const D3D12_VIEWPORT) > , pub RSSetScissorRects : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , NumRects : UINT , pRects : * const D3D12_RECT) > , pub OMSetBlendFactor : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , BlendFactor : * const FLOAT) > , pub OMSetStencilRef : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , StencilRef : UINT) > , pub SetPipelineState : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pPipelineState : * mut ID3D12PipelineState) > , pub ResourceBarrier : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , NumBarriers : UINT , pBarriers : * const D3D12_RESOURCE_BARRIER) > , pub ExecuteBundle : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pCommandList : * mut ID3D12GraphicsCommandList) > , pub SetDescriptorHeaps : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , NumDescriptorHeaps : UINT , ppDescriptorHeaps : * const * mut ID3D12DescriptorHeap) > , pub SetComputeRootSignature : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pRootSignature : * mut ID3D12RootSignature) > , pub SetGraphicsRootSignature : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pRootSignature : * mut ID3D12RootSignature) > , pub SetComputeRootDescriptorTable : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , BaseDescriptor : D3D12_GPU_DESCRIPTOR_HANDLE) > , pub SetGraphicsRootDescriptorTable : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , BaseDescriptor : D3D12_GPU_DESCRIPTOR_HANDLE) > , pub SetComputeRoot32BitConstant : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , SrcData : UINT , DestOffsetIn32BitValues : UINT) > , pub SetGraphicsRoot32BitConstant : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , SrcData : UINT , DestOffsetIn32BitValues : UINT) > , pub SetComputeRoot32BitConstants : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , Num32BitValuesToSet : UINT , pSrcData : * const :: std :: os :: raw :: c_void , DestOffsetIn32BitValues : UINT) > , pub SetGraphicsRoot32BitConstants : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , Num32BitValuesToSet : UINT , pSrcData : * const :: std :: os :: raw :: c_void , DestOffsetIn32BitValues : UINT) > , pub SetComputeRootConstantBufferView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetGraphicsRootConstantBufferView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetComputeRootShaderResourceView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetGraphicsRootShaderResourceView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetComputeRootUnorderedAccessView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub SetGraphicsRootUnorderedAccessView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RootParameterIndex : UINT , BufferLocation : D3D12_GPU_VIRTUAL_ADDRESS) > , pub IASetIndexBuffer : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pView : * const D3D12_INDEX_BUFFER_VIEW) > , pub IASetVertexBuffers : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , StartSlot : UINT , NumViews : UINT , pViews : * const D3D12_VERTEX_BUFFER_VIEW) > , pub SOSetTargets : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , StartSlot : UINT , NumViews : UINT , pViews : * const D3D12_STREAM_OUTPUT_BUFFER_VIEW) > , pub OMSetRenderTargets : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , NumRenderTargetDescriptors : UINT , pRenderTargetDescriptors : * const D3D12_CPU_DESCRIPTOR_HANDLE , RTsSingleHandleToDescriptorRange : BOOL , pDepthStencilDescriptor : * const D3D12_CPU_DESCRIPTOR_HANDLE) > , pub ClearDepthStencilView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , DepthStencilView : D3D12_CPU_DESCRIPTOR_HANDLE , ClearFlags : D3D12_CLEAR_FLAGS , Depth : FLOAT , Stencil : UINT8 , NumRects : UINT , pRects : * const D3D12_RECT) > , pub ClearRenderTargetView : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , RenderTargetView : D3D12_CPU_DESCRIPTOR_HANDLE , ColorRGBA : * const FLOAT , NumRects : UINT , pRects : * const D3D12_RECT) > , pub ClearUnorderedAccessViewUint : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , ViewGPUHandleInCurrentHeap : D3D12_GPU_DESCRIPTOR_HANDLE , ViewCPUHandle : D3D12_CPU_DESCRIPTOR_HANDLE , pResource : * mut ID3D12Resource , Values : * const UINT , NumRects : UINT , pRects : * const D3D12_RECT) > , pub ClearUnorderedAccessViewFloat : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , ViewGPUHandleInCurrentHeap : D3D12_GPU_DESCRIPTOR_HANDLE , ViewCPUHandle : D3D12_CPU_DESCRIPTOR_HANDLE , pResource : * mut ID3D12Resource , Values : * const FLOAT , NumRects : UINT , pRects : * const D3D12_RECT) > , pub DiscardResource : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pResource : * mut ID3D12Resource , pRegion : * const D3D12_DISCARD_REGION) > , pub BeginQuery : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pQueryHeap : * mut ID3D12QueryHeap , Type : D3D12_QUERY_TYPE , Index : UINT) > , pub EndQuery : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pQueryHeap : * mut ID3D12QueryHeap , Type : D3D12_QUERY_TYPE , Index : UINT) > , pub ResolveQueryData : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pQueryHeap : * mut ID3D12QueryHeap , Type : D3D12_QUERY_TYPE , StartIndex : UINT , NumQueries : UINT , pDestinationBuffer : * mut ID3D12Resource , AlignedDestinationBufferOffset : UINT64) > , pub SetPredication : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pBuffer : * mut ID3D12Resource , AlignedBufferOffset : UINT64 , Operation : D3D12_PREDICATION_OP) > , pub SetMarker : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , Metadata : UINT , pData : * const :: std :: os :: raw :: c_void , Size : UINT) > , pub BeginEvent : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , Metadata : UINT , pData : * const :: std :: os :: raw :: c_void , Size : UINT) > , pub EndEvent : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6) > , pub ExecuteIndirect : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pCommandSignature : * mut ID3D12CommandSignature , MaxCommandCount : UINT , pArgumentBuffer : * mut ID3D12Resource , ArgumentBufferOffset : UINT64 , pCountBuffer : * mut ID3D12Resource , CountBufferOffset : UINT64) > , pub AtomicCopyBufferUINT : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDstBuffer : * mut ID3D12Resource , DstOffset : UINT64 , pSrcBuffer : * mut ID3D12Resource , SrcOffset : UINT64 , Dependencies : UINT , ppDependentResources : * const * mut ID3D12Resource , pDependentSubresourceRanges : * const D3D12_SUBRESOURCE_RANGE_UINT64) > , pub AtomicCopyBufferUINT64 : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDstBuffer : * mut ID3D12Resource , DstOffset : UINT64 , pSrcBuffer : * mut ID3D12Resource , SrcOffset : UINT64 , Dependencies : UINT , ppDependentResources : * const * mut ID3D12Resource , pDependentSubresourceRanges : * const D3D12_SUBRESOURCE_RANGE_UINT64) > , pub OMSetDepthBounds : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , Min : FLOAT , Max : FLOAT) > , pub SetSamplePositions : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , NumSamplesPerPixel : UINT , NumPixels : UINT , pSamplePositions : * mut D3D12_SAMPLE_POSITION) > , pub ResolveSubresourceRegion : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDstResource : * mut ID3D12Resource , DstSubresource : UINT , DstX : UINT , DstY : UINT , pSrcResource : * mut ID3D12Resource , SrcSubresource : UINT , pSrcRect : * mut D3D12_RECT , Format : DXGI_FORMAT , ResolveMode : D3D12_RESOLVE_MODE) > , pub SetViewInstanceMask : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , Mask : UINT) > , pub WriteBufferImmediate : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , Count : UINT , pParams : * const D3D12_WRITEBUFFERIMMEDIATE_PARAMETER , pModes : * const D3D12_WRITEBUFFERIMMEDIATE_MODE) > , pub SetProtectedResourceSession : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pProtectedResourceSession : * mut ID3D12ProtectedResourceSession) > , pub BeginRenderPass : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , NumRenderTargets : UINT , pRenderTargets : * const D3D12_RENDER_PASS_RENDER_TARGET_DESC , pDepthStencil : * const D3D12_RENDER_PASS_DEPTH_STENCIL_DESC , Flags : D3D12_RENDER_PASS_FLAGS) > , pub EndRenderPass : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6) > , pub InitializeMetaCommand : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pMetaCommand : * mut ID3D12MetaCommand , pInitializationParametersData : * const :: std :: os :: raw :: c_void , InitializationParametersDataSizeInBytes : SIZE_T) > , pub ExecuteMetaCommand : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pMetaCommand : * mut ID3D12MetaCommand , pExecutionParametersData : * const :: std :: os :: raw :: c_void , ExecutionParametersDataSizeInBytes : SIZE_T) > , pub BuildRaytracingAccelerationStructure : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDesc : * const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC , NumPostbuildInfoDescs : UINT , pPostbuildInfoDescs : * const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC) > , pub EmitRaytracingAccelerationStructurePostbuildInfo : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDesc : * const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC , NumSourceAccelerationStructures : UINT , pSourceAccelerationStructureData : * const D3D12_GPU_VIRTUAL_ADDRESS) > , pub CopyRaytracingAccelerationStructure : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , DestAccelerationStructureData : D3D12_GPU_VIRTUAL_ADDRESS , SourceAccelerationStructureData : D3D12_GPU_VIRTUAL_ADDRESS , Mode : D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE) > , pub SetPipelineState1 : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pStateObject : * mut ID3D12StateObject) > , pub DispatchRays : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , pDesc : * const D3D12_DISPATCH_RAYS_DESC) > , pub RSSetShadingRate : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , baseShadingRate : D3D12_SHADING_RATE , combiners : * const D3D12_SHADING_RATE_COMBINER) > , pub RSSetShadingRateImage : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , shadingRateImage : * mut ID3D12Resource) > , pub DispatchMesh : :: std :: option :: Option < unsafe extern "C" fn (This : * mut ID3D12GraphicsCommandList6 , ThreadGroupCountX : UINT , ThreadGroupCountY : UINT , ThreadGroupCountZ : UINT) > , }
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ID3D12GraphicsCommandList6 {
    pub lpVtbl: *mut ID3D12GraphicsCommandList6Vtbl,
}
extern "C" {
    pub fn pix_init_analysis();
}
extern "C" {
    pub fn pix_shutdown_analysis();
}
extern "C" {
    pub fn pix_begin_capture();
}
extern "C" {
    pub fn pix_end_capture();
}
extern "C" {
    pub fn pix_begin_event_cmd_list(
        command_list: *mut ID3D12GraphicsCommandList6,
        color: UINT64,
        marker: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn pix_end_event_cmd_list(
        command_list: *mut ID3D12GraphicsCommandList6,
    );
}
extern "C" {
    pub fn pix_begin_event_cmd_queue(
        command_queue: *mut ID3D12CommandQueue,
        color: UINT64,
        marker: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn pix_end_event_cmd_queue(command_queue: *mut ID3D12CommandQueue);
}
